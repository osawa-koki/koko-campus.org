<?php
require(__DIR__. "/../../framework/ver3/common.php");
$obj = array(
	"made" => "2022-01-04",
	"updated" => "2022-01-04"
);
head($obj);
?>
<h2>マクロ</h2>
プログラム中の一定の識別子をあらかじめ定義した文字列・数字に置換してプログラムを実行する機能を言います。<br />例えば、円周率を用いたプログラムを作成するにあたって、プログラムコードの色々な場所で「3.14」って書くのは適切ではありません。<br />理由は円周率を「3.14」から「3.1415」に変更した場合、その全てを変更しないといけなくなるからです。<br />また、「3.14」であれば簡単に円周率だと分かりますが、例えばユーザの数を表す「500」やユーザの各データの数を表す「10」などがコードにそのまま書かれていたら、これが何を意味するのか分からなくなってしまいますよね、、、<br />ということで何が入るかわからない部分にはそれ専用の識別子を置いておき、プログラム実行時に一括してそれを埋めるようにするべきです。<br />これを実現するのはマクロ機能です。
<h2>オブジェクト形式</h2>
オブジェクト形式で実行されるマクロ機能です。<br />コードの最初に「#define old new」と書けば、それ以降の「old」の部分を「new」に変更してプログラムが実行されます。
<code class="c">
	#include &lt;stdio.h&gt;
	#define pai 3.14

	int main(void) {
		int r;
		printf("半径を入力してください♪");
		scanf_s("%d", &r);
		printf("直径: %d\n", 2 * r);
		printf("円周: %f\n", 2 * pai * r);
		printf("面積: %f\n", r * r * pai);
		printf("体積: %f\n", 4 / 3 * pai * r * r * r);
	}
</code>
上のコードでは「pai」と書かれた部分を全て「3.14」に置換してプログラムを実行します。
<h2>関数形式</h2>
オブジェクト形式のマクロの進化バージョンで、関数を用いてより複雑なマクロ機能を実現します。<br />オブジェクト形式のマクロと同様に「#define old_fx new_fx」と書けば以降の「old_fx」を「new_fx」に変えてプログラムが実行されます。
<code class="c">
	#include &lt;stdio.h&gt;
	#define pai 3.14
	#define sqr(x) ((x) * (x))

	int main(void) {
		int r;
		printf("半径を入力してください♪");
		scanf_s("%d", &r);
		printf("直径: %d\n", 2 * r);
		printf("円周: %f\n", 2 * pai * r);
		printf("面積: %f\n", sqr(r) * pai);
		printf("体積: %f\n", 4 / 3 * pai * sqr(r) * r);
	}
</code>
上のコードでは「sqr(〇)」と書かれた部分を全て「(〇) * (〇)」に変えてプログラムを実行します。
<?php footer(); ?>