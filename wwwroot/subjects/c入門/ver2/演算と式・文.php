<?php
require(__DIR__. "/../../framework/ver3/common.php");
$obj = array(
	"made" => "2022-01-04",
	"updated" => "2022-01-04"
);
head($obj);
?>
<h2>演算</h2>
演算とは簡単に言えばあるデータに対して何らかの計算を行って結果をデータとして取得することを言います。<br /><br />演算にはその性質から以下の2つに分類できます。
<br />
<ul>
	<li>算術演算</li>
	<li>論理演算</li>
</ul>
<h3>算術演算</h3>
足し算・引き算・掛け算・割り算の4つの計算を言います。
<br /><br />
<table>
	<tbody>
		<tr>
			<th>+</th>
			<td>足し算を意味します。</td>
		</tr>
		<tr>
			<th>-</th>
			<td>割り算を意味します。</td>
		</tr>
		<tr>
			<th>*</th>
			<td>掛け算を意味します。</td>
		</tr>
		<tr>
			<th>/</th>
			<td>割り算の商を意味します。<br />言い換えれば、割り算の結果の小数点以下を切り捨てて求めた整数の部分を言います。</td>
		</tr>
		<tr>
			<th>%</th>
			<td>割り算の余りを意味します。</td>
		</tr>
	</tbody>
</table>
<h3>論理演算</h3>
論理値(数学でいう「真」と「偽」)に関する、「かつ」(論理積)と「または」(論理和)による演算のことを指します。
<br /><br />
<table class="exp">
	<thead>
		<tr>
			<td width="50%">論理積演算</td>
			<td width="50%">論理和演算</td>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td class="center">&&</td>
			<td class="center">||</td>
		</tr>
		<tr>
			<td>「かつ」を意味します。<br />両方とも「真(非0)」の場合にのみ「真(非0)」となり、それ以外は「偽(0)」となります。</td>
			<td>「または」を意味します。<br />どちらか一方、ないしは両方が「真(非0)」の場合に「真(非0)」となり、両方とも「偽(0)」の場合に「偽(0)」となります。</td>
		</tr>
	</tbody>
</table>
<br />
また論理値を逆転させるための論理演算子である否定は「!」で表します。<br />「真(1)」の場合は「偽(0)」となり、「偽(0)」の場合は「真(1)」となります。
<h2>オペランド・式・文</h2>
次にオペランドと式と分について説明します。
<h3>オペランド</h3>
オペランドとは「+」「-」「*」「/」の演算子の演算対象である変数・定数を言います。<br />例えば「1 + 2」では演算子は「+」で、オペランドは「1」と「2」です。
<h3>式</h3>
式とは変数・定数ないしはそれらを演算子で結合したものを言います。<br />例えば、「z = x + y;」では「z」「x」「y」「x + y」「z = x + y」が式となります。
<h3>式文</h3>
「;(セミコロン)」で区切られて表現される一連の命令を言います。<br />例えば、「z = x + y;」では「z = x + y;」全体が式文となります。
<h2>演算と型変換</h2>
前回説明したデータの型は演算時のオペランドの型が異なる場合には大きい方の型に黙示的に変化します。<br />例えば、「1 + 2」は整数型と整数型の加算ですのでその結果も整数型ですが、「1 + 0.23」は整数型と浮動小数点型の演算ですのでその結果は浮動小数点型となります。
<h3>キャスト</h3>
暗示的な型変換では対応できない場面もあります。<br />例えば、「5 / 2」は整数型と整数型の演算ですので、その結果も整数型となっていしまい、本当の演算結果である「2.5」を格納できません。<br />そういった場合には明示的に型変換を行う必要があります。<br />これをキャストと呼びます。<br />キャストは「(型) 式」と書きます。
<code class="c">
	int main(void) {
		int x, y;
		x = 5;
		y = 2;
		printf("%f", (double) x / y); /*「x」「y」はともに整数型である為、小数である結果を表示するためには小数型にキャストする必要がある*/
		return 0;
	}
</code>
<?php footer(); ?>