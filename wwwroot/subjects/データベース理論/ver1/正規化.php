<?php
require(__DIR__. "/../../framework/ver3/common.php");
$obj = array(
	"made" => "2022-02-10",
	"updated" => "2022-02-10"
);
head($obj);
?>
<h2>正規化</h2>
関係データベースにおける正規化とは、冗長なデータを排除して関連の強いデータのみをひとつのテーブルにまとめて、表の独立性を高めることを言います。<br /><br />正規化の目的として以下の2つがあります。
<ul>
	<li>冗長性の排除</li>
	<li>整合性の維持</li>
</ul>
また、正規化はそのレベルによって「1 ～ 5」まで分類できます。
<div class="scroll-600w">
	<table>
		<tbody>
			<tr>
				<th>非正規形</th>
				<td>繰り返しがある状態です。<br />こちらは、関係データベースでは扱えません。</td>
			</tr>
			<tr>
				<th>第一正規形</th>
				<td>非正規形から繰り返している部分を排除した状態です。</td>
			</tr>
			<tr>
				<th>第二正規形</th>
				<td>第一正規形から部分関数従属性を排除した形です。<br />部分関数従属とは「X &rarr; Y」のような、Xが定まればYも一意に定まるという関係性です。<br />非キーが候補キーの一部分に従属する部分を排除した形です。</td>
			</tr>
			<tr>
				<th>第三正規形</th>
				<td>第二正規形から推移的関数従属性を排除した形です。<br />推移的関数従属性とは「X &rarr; Y &rarr; Z」のような、連鎖的な従属関係です。<br />非キー同士の従属関係を排除した形です。</td>
			</tr>
			<tr>
				<th>第四正規形</th>
				<td>保留</td>
			</tr>
			<tr>
				<th>第五正規形</th>
				<td>保留</td>
			</tr>
		</tbody>
	</table>
</div>
<h2>非正規形</h2>
レコードに繰り返している項目がある状態を言います。<br />例として、自分がゲットしたポケモンを管理するテーブルを想定します。<br />ポケモンは技を4つまで覚えられますが、これを4つ並べて書くと繰り返し項目となります。<br /><br />尤も、技は4つで確定ですので「技1」「技2」「技3」「技4」とすれば、別に繰り返してもok!ですが、ここでは技は1つ以上の任意の数を習得できるとして下さい。<br /><br />この場合は繰り返しはng!となります。
<img class="no-max" src="../pics/非正規形.gif" alt="非正規形" />
<h2>第一正規形</h2>
非正規形のテーブルから繰り返している部分を排除した形です。<br />先ほどは「技」と「技のタイプ」が繰り返しているため、これを排除します。
<img class="no-max" src="../pics/第一正規形.gif" alt="第一正規形" />
データベースはカラムでの繰り返しは推奨されません。<br />あるテーブルに複数のレコードして登録するべきです。
<h2>第二正規形</h2>
第一正規形のテーブルから部分関数従属を排除した形です。<br />部分関数従属とは、候補キーと候補キーの一部に従属する非キーの関係のことを言います。<br />「X &rarr; Y」の関係のことです。<br /><br />先ほどのポケモンの例では、図鑑番号が定まればポケモンの名前も決定されますよね♪<br />これを排除した形です。<br /><br />また、ポケモンによってタイプは変わらないため、これも別のテーブルに格納することができます。<br /><br />因みに、以下のテーブルでは「ニックネーム」と「図鑑番号」を合わせて候補キーとしています。<br />「ぴかちゃん」というニックネームを複数のピカチュウに付けることはできませんが、ピカチュウとピチューのように異なるポケモンには付けることができます。<br /><br />ピチューに「ぴかちゃん」ってなんやねんと思うかもしれませんが、、、
<img class="no-max" src="../pics/第二正規形.gif" alt="第二正規形" />
<h2>第三正規形</h2>
第二正規形では、候補キーと非キーの従属関係を排除しましたが、第三正規形では非キー同士の従属関係も排除します。<br /><br />専門的な用語を用いて説明すると、推移的関数従属関係がない状態と言えます。<br />推移的関数従属とは「X &rarr; Y &rarr; Z」の関係のことです。<br /><br />これが非常にややこしいです。<br />先ほどの例を用いてこのややこしさを説明します。<br />先ほどは「ニックネーム」と「図鑑番号」を合わせて候補キーとしたため、「ニックネーム・図鑑番号 &rarr; 名前・タイプ1・タイプ2」の従属関係を排除することで第二正規形を実現しました。<br /><br />今回は、候補キーは「ニックネーム」で、これに従属するように「図鑑番号」と「メインウェポン」と「メインウェポンのタイプ」が設定されています。<br />しかしながら、「メインウェポンのタイプ」は「メインウェポン」に従属しています。<br />「ニックネーム &rarr; メインウェポン &rarr; メインウェポンのタイプ」という感じです。<br /><br />したがって、これを分離させることが可能です。<br /><br />「メインウェポン」と「メインウェポンのタイプ」は非キー同士ですので、これを排除することで第三正規形が実現可能です。
<img class="no-max" src="../pics/第三正規形.gif" alt="第三正規形" />
<?php footer(); ?>