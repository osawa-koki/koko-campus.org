<?php
require(__DIR__. "/../../framework/ver3/common.php");
$obj = array(
	"made" => "2021-12-28",
	"updated" => "2021-12-28"
);
head($obj);
?>
<h2>コメントアウト</h2>
変数と関数の説明をする前に、、、<br />プログラムコード内でメモ書きをする際は行頭に「#」を付けるとその行全体がコメントアウト(プログラムコード内のメモ書き)となります。
<code class="python">
	 #今日も良い天気だね♪
	print("I Love ぴかちゅう!")
</code>
「#今日も良い天気だね♪」の部分は実行されません。<br /><br />コメントアウトはプログラムの保守性(修正のしやすさ)の観点からコードの書き手からコードの読み手(修正する人)に対するメッセージとして用いられます。<br />どんな処理をしているかを端的に説明しましょう♪<br /><br />今日の天気について書く必要はありません。
<h2>変数</h2>
いきなり主題から外れますが、皆さんPCを購入する際にスペックを確認すると思いますが「メモリ」と「ストレージ(記憶領域)」の違いって分かりますか???
<p class="r">プログラミングする際にはハードウェアの知識はC/C++プログラミングを除いてはほとんど不要ですが、必要最小限の知識は必要とされますので、知らない方はここで覚えちゃいましょう♪</p>
<table class="exp">
	<thead>
		<tr>
			<th width="50%">メモリ</th>
			<th width="50%">ストレージ<br />(記憶領域)</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>プログラムを実行するために必要な一時的なデータを格納するために用いられます。<br />PCの電源をオフにするとデータも削除されます。</td>
			<td>ファイルとして長期間保存する際に用いられます。<br />PCの電源をオフにしてもデータは削除されません。</td>
		</tr>
	</tbody>
</table>
メモリというのはあくまでもプログラムを実行するためだけのデータを保存します。<br />これをプログラミングする際では「<strong>変数</strong>」として作成します。
<h3>変数の定義</h3>
他の言語を学習している方は変数の定義について学んだと思います。<br />c/c++だったら「int 〇〇〇」「short 〇〇〇」、javascriptだったら「let 〇〇〇」「const 〇〇〇」と、、、<br /><br />pythonでは変数の定義を明示的に行う必要がありません。<br />そのまま変数名を書けばok!です。<br />変数名には半角英数字と「_(アンダースコア)」が使用可能で、変数名の先頭は数字を使用できません。
<p class="r">先頭のアンダースコアも諸事情があって使用を避けてください。</p>
<h3>変数への代入</h3>
変数にデータを代入する際には「変数名 = 格納したいデータ」で実行します。<br /><br />「=(イコール)」は数学では「同じ(等価)」を意味しますが、プログラミング上では右のデータを左の変数に代入することを意味します。<br />では実際に変数にデータを代入してみましょう♪
<code class="python">
	num = 10 #「num」という変数に整数型データ「10」を代入
	ary = ["ぽっちゃま", "ぽったいし", "えんぺると"] #「ary」という変数に配列型データ["ぽっちゃま", "ぽったいし", "えんぺると"]を代入
	result = 1+10+100 #「result」という変数に「111」を代入
</code>
<h3>変数の参照</h3>
変数に代入されたデータを使用する際には変数名を書けばok!です。
<code class="python">
	num1 = 10
	num2 = 25
	print(num1) #「10」と出力
	print(num2) #「25」と出力
	print(num1 + num2) #「35」と出力
</code>
<h3>変数の更新</h3>
変数に代入されたデータは他のデータで上書きすることもできます。
<code class="python">
	num = 10 #「num」に「10」を代入
	num = num + 15 #「num」に「num」内のデータ(10)に「15」を足したものを代入
	print(num) #「25」と出力
</code>
<h2>演算</h2>
もうすでに数字の足し算(加法演算)と引き算(減法演算)については実行しましたね♪<br />ここでは演算についてもう少し詳細に説明します。<br />演算は大きく以下の2つに分類できます。
<ul>
	<li>算術演算</li>
	<li>論理演算</li>
</ul>
<h3>算術演算</h3>
足し算・引き算・掛け算・割り算です。<br />足し算と引き算についてはそれぞれ「+」と「-」を用いるのでそのままですが、掛け算と割り算は「&times;」と「&divide;」を用いないことに注意してください。
<table>
	<tbody>
		<tr>
			<th>+</th>
			<td>足し算です。<br />「10 + 25」は「35」、「9 + 9」は「18」となります。<br />文字列を結合する際にも用いられます。<br />「"ばなな" + "ジュース"」で「"ばななジュース"」となります。</td>
		</tr>
		<tr>
			<th>-</th>
			<td>引き算です。<br />「25 - 10」は「15」、「10 - 25」は「-15」となります。</td>
		</tr>
		<tr>
			<th>*</th>
			<td>掛け算です。<br />「5 * 2」は「10」、「-2 * 10」は「-20」となります。</td>
		</tr>
		<tr>
			<th>/</th>
			<td>割り算です。<br />「5 / 2」は「2.5」、「7 / 2」は「3.5」となります。</td>
		</tr>
		<tr>
			<th>//</th>
			<td>割り算の商を求めます。<br />「5 // 2」は「2」、「7 // 2」は「3」となります。</td>
		</tr>
		<tr>
			<th>%</th>
			<td>割り算の余りを求めます。<br />「5 % 2」は「1」、「10 % 7」は「3」となります。</td>
		</tr>
		<tr>
			<th>**</th>
			<td>べき乗を求めます。<br />「3 ** 2」は「9」、「5 ** 2」は「25」となります。</td>
		</tr>
	</tbody>
</table>
<h3>論理演算</h3>
「かつ」と「または」による演算です。
<table>
	<thead>
		<tr>
			<th>かつ</th>
			<th>または</th>
		</tr>
		<tr>
			<th>and</th>
			<th>or</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>2つの条件式の両方が「真」の場合に「真」、どちらか一方でも「偽」の場合は「偽」となります。</td>
			<td>2つの条件式のいずれか一方でも「真」の場合に「真」、両方とも「偽」の場合は「偽」となります。</td>
		</tr>
	</tbody>
</table>
また、not演算子を用いれば「真」と「偽」を入れ替えることができます。<br />詳しくは次の条件分岐で説明します。
<?php footer(); ?>