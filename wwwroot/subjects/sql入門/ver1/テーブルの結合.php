<?php
require(__DIR__. "/../../framework/ver3/common.php");
$obj = array(
	"made" => "2022-02-03",
	"updated" => "2022-02-03"
);
head($obj);
?>
<h2>テーブルの結合</h2>
データを管理するのにひとつのテーブルに全てのデータを格納するのは適当とは言えません。<br />例えばストーリー中に僕が仲間にしたポケモンを管理する「kokoのポケモン」テーブルに以下のカラムを設定したとします。
<ul>
	<li>識別子</li>
	<li>仲間にした日付</li>
	<li>図鑑番号</li>
	<li>ニックネーム</li>
	<li>名前</li>
	<li>タイプ1</li>
	<li>タイプ2</li>
</ul>
う～～～ん、、、<br />図鑑番号が分かれば、そこからポケモン名とタイプ1とタイプ2は特定できますよね、、、<br /><br />仲間になったポケモンごとにこれを記録する必要はありません、、、<br /><br />「kokoのポケモン」テーブルとは分離した「pokemon」テーブルで一括して管理して、必要時にこれを合体させれば美しいですよね♪<br /><br />ということで、あるデータの集合体に関して、テーブルを分離して管理して必要な時に合体させる方法について学びましょう♪
<h2>JOIN文</h2>
テーブルの結合にはJOIN文を使用します。<br />以下のように書きます。
<code class="sql">
	SELECT カラム名
	FROM 結合元テーブル
	JOIN 呼び出すテーブル
	ON 結合条件
</code>
結合条件に関しては一旦無視してok!です。<br />では、結合してみましょう♪<br />因みにkokoのポケモンテーブルは以下のデータが格納されています。
<img src="../pics/kokoのポケモン(単体).png" alt="kokoのポケモン" />
この図鑑番号からポケモンテーブルのデータを合体させます。
<div class="separator"></div>
ではLet's JOIN!!
<code class="sql">
	SELECT 日付, ニックネーム, 名前, タイプ1, タイプ2
	FROM kokoのポケモン
	JOIN pokemon
	ON kokoのポケモン.図鑑番号 = pokemon.図鑑番号;
</code>
じゃ～～～ん!!!
<img src="../pics/kokoのポケモン(結合).png" alt="テーブルの結合" />
図鑑番号を架け橋として2つのテーブルを結合することができました。
<h2>結合条件</h2>
先ほど無視したテーブルの結合条件を説明します。<br />JOINは単純に両者を合体させるわけではありません。<br />両方のテーブルの何かと何かを基準として合体させますが、これをON句で指定します。<br />また、「.(ドット)」はどのテーブルのどのカラムかを指定します。<br />例えばテーブルAのカラムXとテーブルBのカラムYを基準に結合させるときには以下のように記述します。
<code class="sql">
	ON テーブルA.カラムX = テーブルB.カラムY
</code>
先ほどは図鑑番号を基準にしました。<br />図鑑番号が分かればpokemonテーブルからそのポケモンを特定できますからね♪
<h2>外部キー制約</h2>
外部キーとは他のテーブルの行を参照するためのキーで、先ほどの例ではkokoのポケモンテーブルの図鑑番号が該当します。<br />この図鑑番号カラムによってpokemonテーブルの行を結合させました。<br /><br />外部キー制約とはこの外部キーに課せられる制約を言います。<br />参照制約とも言います。<br /><br />外部キー制約では外部キーの実現値が参照先のキーに必ず存在することを要求します。<br /><br />先ほどの例ではkokoのポケモンテーブルの図鑑番号カラムで、pokemonテーブルに存在しない図鑑番号を指していたら外部キー制約違反です。
<img src="../pics/外部キー.png" alt="外部キー制約" />
また、外部キーが参照するカラムは主キーである必要があります。<br />例えば、図鑑番号「25」が参照先テーブルに複数存在したらどっちを結合するか決定できません。
<?php footer(); ?>