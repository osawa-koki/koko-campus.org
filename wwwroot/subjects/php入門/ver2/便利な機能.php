<?php
require(__DIR__. "/../../framework/ver3/common.php");
$obj = array(
	"made" => "2022-02-02",
	"updated" => "2022-02-02"
);
head($obj);
?>
<h2>便利な機能</h2>
遂にここまで来ましたね♪<br /><br />php入門の最終章です。<br />ここではphpでプログラミングする際に役に立つ機能を紹介して行きます。
<h2>require・include</h2>
両者ともに外部のphpを取り込むための関数です。<br /><br />よく使う関数をひとつのファイルにまとめておいて、それを各phpファイルで読み込んで使用することができます。
<code class="php">
	require("ファイルへのパス");
	include("ファイルへのパス");
</code>
両者の違いは指定したファイルの読み込みに失敗した際のエラーの吐き出し方法です。<br />「require()」はファイルの読み込みに失敗した際は処理を中断するのに対して、「include()」はファイルの読み込みに失敗しても処理を継続します。<br /><br />原則としてファイルの読み込みに失敗した際に強制的に処理を中断する「require()」関数を使用することを推奨します。
<h2>マジック定数</h2>
マジック定数とは、ファイルそのものに関する情報を取得します。<br />例えば「ある行の行番号」、「ファイル名」、「ディレクトリ名」を取得します。<br /><br />例えば前述の「require()」を使用すると読み込まれたファイルは読み込んだファイルの一部として動作します。<br />言い換えれば読み込まれたファイルにおいて相対パス指定を採用している場合はパスは読み込んだファイルからのパスを指定しなければなりません。<br /><br />これでは不便な場合があります。<br />読み込まれるファイルを起点とした相対パス指定が困難になります。<br /><br />そこで「マジック定数」を使用します。<br />マジック定数は全部で「9」個存在しますが、ここでは良く用いる「2」つを紹介します。
<ul>
	<li>__FILE__</li>
	<li>__DIR__</li>
</ul>
<h3>__FILE__</h3>
そのファイルのパスとファイル名を返します。<br /><br />「require()」「include()」関数で呼びこまれた際にも変化しません。
<h3>__DIR__</h3>
そのファイルのディレクトリを返します。<br />「__FILE__」同様に「require()」「include()」関数で呼びこまれた際にも変化しません。
<h2>debug_backtrace</h2>
こちらもデバグ用の関数です。<br />バックトレースと呼ばれるプログラム内部の処理を取得します。<br />「var_dump()」と組み合わせて用いることが多いです。
<code class="php">
	var_dump(debug_backtrace());
</code>
現在のファイル名・行番号・関数名などの情報を連想配列型で返します。
<?php footer(); ?>