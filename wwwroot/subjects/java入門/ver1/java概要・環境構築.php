<?php
require(__DIR__. "/../../framework/ver3/common.php");
$obj = array(
	"made" => "2022-02-20",
	"updated" => "2022-02-20"
);
head($obj);
?>
<h2>java</h2>
<div class="bg bg-logo-java入門">
	1990年にサン・マイクロシステムズ社によって開発された、「Write once, run anywhere」の精神のもと、OSに依存しないで動作することを特徴とするプログラミング言語です。<br />といっても、現在ではほとんどの言語がコンパイル後にOSに合わせた実行可能プログラムを生成するのでそこまで魅力的ではなくなりましたが、、、<br /><br />javaはかなり古い言語である一方で、GUIなどの新しい機能にも対応し続けている言語で、汎用性が高く人気がある言語です。<br />また、事実上のスタンダードとしても機能し、現在ではandroidアプリの開発にも使用されていて、需要もさらに高まっています。<br /><br />ということで、Let's start java!!!といきましょう♪
</div>
<h2>コンパイルとビルド</h2>
コンピュータは我々が書いた英語みたいなコードを直接実行することはできません。<br />コンピュータが実行することができるのは「0」と「1」だけで書かれたバイナリデータと呼ばれるものだけです。<br />そのため、我々が書いたコード(ソースコード)をコンピュータが実行できるように変換する必要があります。<br />これを「<strong>コンパイル</strong>」ないしは「<strong>ビルド</strong>」と呼びます。
<img src="../pics/コンパイル.png" alt="コンパイルの説明画像" />
<h3>コンパイル</h3>
プログラミングでは、英語っぽいコード(<strong>ソースコード</strong>)を入力しますがコンピュータはこのコードを直接実行することはできません。<br /><br />コンピュータが我々が書いたソースコードを実行するためには一度ソースコードをコンピュータが実行できるコード(<strong>実行可能プログラム</strong>)へ変換する必要があります。<br /><br />この作業を「<strong>コンパイル</strong>」と呼びます。
<h3>ビルド</h3>
コンパイルの進化バージョンです。<br />入力されたコードをチェックして、さらには実行時に必要なライブラリを結合させて実行可能なプログラムを作成することを言います。<br />ここでは、コンパイルとビルドを厳密に区別することはしませんが、これ以降にビルドと言ったら「コンパイル + α」の作業だと捉えてください。
<h2>コンパイルの取得</h2>
では、実際にjavaコンパイラを取得しましょう♪<br />といっても、javaプログラムを書いて、コンパイルをして、実行して、デバグをして、、、<br />って作業をそれぞれ独立して行うのは大変ですよね、、、<br /><br />そこで、IDEを使用しましょう♪<br />IDEとは「Integrated Development Environment」の略でコーディング・コンパイル・実行・デバグをAll In One行うプログラムです。<br /><br />代表的なIDEに以下のものがあります。
<ul>
	<li>eclipse</li>
	<li>Net Beans</li>
</ul>
ここではjavaプログラマ界隈で非常に人気があるecllipseを使用しましょう♪<br />以下のリンクからeclipseをダウンロードして下さい。
<a href="https://www.eclipse.org/downloads/" class="link to-eclipse">eclipse</a>
ダウンロードが完了したらそのまま起動してください。<br />eclipse本体のインストール先とjavaコンパイラのインストール先を指定します。<br />特に理由がなければそのままでok!です。<br />そのままインストールを開始してください。<br /><br />僕はデスクトップスタートメニューにショートカットを作成したくないのでこれのチェックを外しましたが、そのままでもok!です。
<img src="../pics/eclipse-インストール.gif" alt="eclipse" />
<h2>コードの実行(IDE)</h2>
プログラムはプロジェクトと呼ばれる単位で管理されます。<br />プロジェクトの中にjavaプログラムであるクラスを作成してそれを実行します。<br /><br />ということで、プロジェクトを作成して、その中にクラスを作成して簡単なプログラムを書いて実行してみましょう♪<br /><br />プロジェクト名とクラス名は任意でok!ですが、原則として英数字を使用してください。
<img class="no-max" src="../pics/eclipse-実行.gif" alt="exclipse 実行" />
上で実行しているコードを紹介します。
<code class="java">
	package proj1;

	public class koko {
		public static void main(String[] args) {
			System.out.println("hello java");
		}
	}

	/* &darr; コンソール &darr;
	hello java
	*/
</code>
皆さんが実行する際にはプロジェクト名である「proj1」とクラス(ファイル)名である「koko」を適切な名前に変えてください。<br /><br />「hello java」と出力されると思います。
<!--
<h2>コードの実行(コマンドライン)</h2>
次に、コマンドラインから実行する方法も紹介します。<br />IDEだけで動かせばok!、興味ないよって方は飛ばしてください。<br /><br />コマンドラインとはハッカーがカチャカチャ操作する黒い画面だと思って下さい。<br />windowsならコマンドプロンプトが該当します。
<h3>環境変数の登録</h3>
最初に環境変数を登録する必要があります。<br />スタートメニューから環境変数と検索してください。
<img src="../pics/環境変数-スタートメニュー.png" alt="環境変数" />
ユーザ環境変数の「Path」にjavaコンパイラまでのパスを指定します。<br />javaコンパイラはeclipseインストール時に変更をしていなければ「C:\Program Files\Java\jdk-11.0.11\bin」にインストールされています。
<img src="../pics/環境変数-登録.gif" alt="環境変数の登録" />
<p class="r">バージョンはそれぞれに合わせてください。</p>
これで完了です。<br />では、コマンドプロンプトを起動してください。<br />こちらもスタートメニューから検索すれば表示されます。<br /><br />この画面で、以下のコマンドを実行してください。
<code class="shell">
	java --version
</code>
<img src="../pics/javaコマンド-バージョン確認.gif" alt="java versionコマンド" />
バージョンが表示されたら環境変数の登録に成功しています。
<h3>ディレクトリの移動</h3>
コマンドラインからjavaコードをコンパイルするにはこのjavaコマンドを実行します。<br />具体的にはjavaの後に空白文字を入れてファイルへのパスを指定します。<br />ですけどまずは対象のディレクトリまでコマンドラインで移動しましょう♪<br /><br />パスとはファイルまでの道のりを意味し、「dir1\dir2\file.java」のようにディレクトリを「\(バックスラッシュ)」で区切って表します。<br />ひとつ上のディレクトリは「..\」で表し、ふたつ上のディレクトリは「..\..\」で表します。<br /><br />対象のディレクトリに移動して、アドレスバーの部分でcmdと入力してください。<br />そこをカレントディレクトリ(現在いるディレクトリ)としてコマンドプロンプトが起動されます。
<img src="../pics/コマンドプロンプト-カレントディレクトリ指定.gif" alt="コマンドプロンプト" />
もしくはcdコマンドを指定してそのディレクトリまで移動します。
<code class="shell">
	cd 移動先のディレクトリ
</code>
<img src="../pics/cdコマンド.gif" alt="cdコマンド" />
一気にパスを指定してもいいのですが、僕はひとつずつ移動するのが好きです。<br />これで対象のディレクトリへ移動できました。
<h3>javaコマンドの実行</h3>
ここまでくればあと少しです。<br />以下のコマンドを実行します。
<code class="shell">
	java ファイル名
</code>
これでファイルが実行されます。<br />ここではファイル名を「main.java」にしてあります。
<img src="../pics/javaコマンド.gif" alt="javaコマンド" />
-->
<h2>eclipseの画面構成</h2>
次にeclipseの画面構成を説明します。<br />eclipseの画面は4つのビューから構成されます。
<img src="../pics/eclipse-画面構成.png" alt="eclipse 画面構成" />
<ul>
	<li>パッケージビュー</li>
	<li>エディタビュー</li>
	<li>コンソールビュー</li>
	<li>アウトラインビュー</li>
</ul>
<h3>パッケージビュー</h3>
javaプログラムの構成単位であるパッケージを管理します。
<h3>エディタビュー</h3>
実際にコードを入力する部分です。
<h3>コンソールビュー</h3>
プログラム実行時の出力結果を表示したり、バグの詳細を表示する画面です。
<h3>アウトラインビュー</h3>
ファイルの構造の概要を表示します。<br />ほとんど使用しませんが、コード量が膨大になったときに、その管理のために使用します。
<h2>eclipseの設定</h2>
僕はフォントは「consolas」で大きい文字が好きなのでeclipseの設定を変更します。<br />デフォルトでも見づらくない方はスルーしてもok!です。<br />「Window &gt; Preference &gt; General &gt; Apperance &gt; Colors and Fonts」から「Java Editer Text Font」を選択し、右に表示されている「Edit」をクリックします。<br /><br />好きなフォントとフォントサイズに変更してください。<br />僕はフォントは「consolas」で、フォントサイズは「12」をオススメします。
<img src="../pics/eclipse-設定.gif" alt="eclipse 設定" />
大分、見やすくなりましたね♪<br /><br />これで、javaでプログラミングするための環境が整いました♪<br />次からは実際にプログラムを書いていきましょう♪
<?php footer(); ?>