<?php
require(__DIR__. "/../../framework/ver3/common.php");
$obj = array(
	"made" => "2022-05-10",
	"updated" => "2022-05-10"
);
head($obj);
?>
<h2>インポート</h2>
ポケモン802匹(第七世代まで)をいちいち、INSERT文を用いてテーブルに格納するのは大変ですよね、、、<br /><br />ということでファイルから一括してインポートする方法を紹介します。<br /><br />最初にデータベースを右クリックして「tasks」を選択し、コンテキストメニューから「Import Data」を選択して下さい。
<img src="../pics/インポート.gif" alt="インポート" />
ここをクリックするとインポートおよびエクスポート用のウィザードが表示されます。<br />このプログラムからインポート処理を実行します。
<img src="../pics/インポートおよびエクスポート-ウィザード.gif" alt="インポートおよびエクスポート-ウィザード" />
最初にどのデータを読み取るかを設定します。<br />オラクルDBなどの他のデータベース、EXCELなどからデータを取り込むことが可能です。<br />今回はCSV形式のファイルからインポートするため、「Flat File Source」とします。<br />その他の設定は各自のファイルの設定を入力して下さい。
<img src="../pics/データソースの設定.gif" alt="データソースの設定" />
上で設定した情報がどのように取り込むファイルを認識したかを確認します。<br />きちんと認識できていますね♪
<img src="../pics/データソースの確認.gif" alt="データソースの確認" />
次に、上記データを取り込む先を指定します。
<img src="../pics/データソース-エクスポート先.gif" alt="データソースのエクスポート先" />
ここでは接続先を指定し、次の画面ではデータベース・テーブルを指定します。
<img src="../pics/データソース-エクスポート先(2).gif" alt="データソースのエクスポート先" />
これで完璧です。<br />後は、そのまま説明に沿って進めてください。<br /><br />インポートおよびエクスポートが完了したら実際にSQL文を実行してインポートが成功しているか確認しましょう♪
<code class="sql">
	SELECT *
	FROM pokemon;
</code>
<img src="../pics/インポート完了確認.gif" alt="インポート完了の確認" />
きちんとインポートできていますね♪
<h2>インポート(flat)</h2>
先ほどはオラクルDB、EXCELなど様々なデータソースを指定できましたが、今回はCSVファイル専用のデータのインポート方法を紹介します。<br />対象がCSVファイルのみとなっている分、先ほどの方法よりも簡単で、かつ便利です。<br />また、テーブルに挿入するのではなく、テーブルごと作成します。<br /><br />先ほどのインポートを選択する場面でひとつ上の「Import Flat File」を選択して下さい。<br /><br />先ほどと異なり、以下のウィザードが現れます。
<img src="../pics/import-flat-file.gif" alt="Import Flat File" />
最初にデータソースの設定をします。
<img src="../pics/データソースの設定(flat).gif" alt="データソースの設定" />
こちらは特に設定することなく自動でいい感じに認識してくれます。
<img src="../pics/データソースの確認(flat).gif" alt="データソースの確認" />
また、こちらはデータ型を自動で設定してくれます。
<img src="../pics/インポート-データ型の自動設定.gif" alt="インポート時のデータ型の自動設定" />
後はそのまま「Next」「Finish」と進めばデータがインポートされます。<br /><br />インポートが完了したらSQL文を実行して確認してみましょう♪
<code class="sql">
	SELECT *
	FROM pokemon2;
</code>
<img src="../pics/インポート完了確認(flat).gif" alt="インポート完了確認" />
<h2>エクスポート</h2>
次はSQL Serverのデータを出力する方法を説明します。<br />といっても、インポートとほとんど同じですが、、、<br /><br />最初にデータベースを右クリックして「Tasks &gt; Export」を選択して下さい。
<img src="../pics/エクスポート0.gif" alt="エクスポート" />
ウィザードが現れるのでそのまま進みます。<br /><br />最初にデータソースを選択します。<br />「SQL Server Native Client 11.0」を選択して下さい。
<img src="../pics/エクスポート1.gif" alt="エクスポート" />
次にエクスポート先を指定します。<br />ここではCSVファイルに出力するため、「Flat File Desitination」を選択します。<br /><br />同時に複数の出力用の情報を設定します。
<img src="../pics/エクスポート2.gif" alt="エクスポート" />
この画面では、SQL文を発行して出力内容を指定するか、データべース・テーブルをそのまま出力するかを決定します。<br /><br />今回はテーブル内容をそのまま出力するため、上の「*** tables ***」を選択します。
<img src="../pics/エクスポート3.gif" alt="エクスポート" />
データソースとなるテーブルと区切り文字を指定します。
<img src="../pics/エクスポート4.gif" alt="エクスポート" />
「Finish」をクリックするとエクスポートが実行されます。<br />指定したパスに出力されているのが確認できます。
<img src="../pics/エクスポート5.gif" alt="エクスポート" />
poke_smallテーブルを作成した後にデータを若干操作したため、テーブルの中身が上位10件ではなくなっています。
<h2>エクスポート(sqlcmd)</h2>
次はコマンドプロンプトからデータをエクスポートする方法を紹介します。<br />コマンドプロンプトから以下のコマンドを実行します。
<code class="shell">
	sqlcmd -d koko -i script.sql -s, -W -h -1 -o result.csv
</code>
それぞれのオプションの意味を説明します。
<table>
	<tbody>
		<tr>
			<th>-d</th>
			<td>使用するデータベース名</td>
		</tr>
		<tr>
			<th>-i</th>
			<td>実行するSQLファイル</td>
		</tr>
		<tr>
			<th>-s</th>
			<td>列の区切り文字</td>
		</tr>
		<tr>
			<th>-W</th>
			<td>余分な文字を削除</td>
		</tr>
		<tr>
			<th>-h</th>
			<td>ヘッダ</td>
		</tr>
		<tr>
			<th>-o</th>
			<td>出力ファイル</td>
		</tr>
	</tbody>
</table>
<p>引用元サイトは<a href="https://docs.microsoft.com/ja-jp/sql/tools/sqlcmd-utility?view=sql-server-ver15">こちら(公式)</a>。</p>
実行するSQLファイルは以下の通りです。
<code class="sql">
	SELECT *
	FROM pokemon;
</code>
<img src="../pics/sqlcmd-エクスポート.gif" alt="sqlcmd エクスポート" />
空だったファイルにSELECT結果が入力されています。<br />ファイルが存在しない場合には新しくファイルが生成されます。







<?php footer(); ?>