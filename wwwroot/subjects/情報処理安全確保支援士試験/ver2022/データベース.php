<?php
require(__DIR__. "/../../framework/ver3.1/common.php");
$obj = array(
	"made" => "2022-03-21",
	"updated" => "2022-03-21"
);
head($obj);
?>
<p id="message">今回からはデータベースについて学びます。<br /><br />情報社会と形容される今日ではデータの取扱いは企業のライフラインになります。<br /><br />また、個人情報の流出事件ではこのデータベースの管理が不十分であったことに起因することも多く、データベースに関する知識はITエンジニアには必要不可欠です。<br /><br />※以下ではデータベースをDBと表記します。<br /><br />それでは、Let's smile!!</p>
<h2>DB</h2>
データベースとは、データをアプリケーションから切り離して集中管理することで、アプリケーション間でデータを共有することを可能にする仕組みです。<br /><br />データベースを活用する利点として以下のことがあげられます。
<ul>
	<li>データの一元管理が可能</li>
	<li>データ処理が容易</li>
	<li>セキュリティ面で安全</li>
</ul>
<h2>DBの種類</h2>
次はDBに保存されるデータの構造について学びましょう♪
<div class="scroll-600w">
	<table>
		<tbody>
			<tr>
				<th>関係DB</th>
				<td>表形式(エクセルっぽい)のDBで、「リレーショナルDB」とも呼ばれます。<br /><br />もっとも一般的なDBです。<br /><br />横のラインを「行(タプル)」、縦のラインを「列(フィールド)」と呼びます。</td>
			</tr>
			<tr>
				<th>構造型DB</th>
				<td>データを構造化したDBをことを言い、下の「階層型DB」と「網型DB」の2つを言います。</td>
			</tr>
			<tr>
				<th>階層型DB</th>
				<td>「木構造」のデータベースで、親ノードと子ノードが「1 対 複数」で対応します。</td>
			</tr>
			<tr>
				<th>網型DB</th>
				<td>「ネットワーク型DB」とも呼ばれます。<br /><br />階層構造に似ていますが、親と子の関係をとらずにそれぞれは「複数 対 複数」で対応します。</td>
			</tr>
			<tr>
				<th>OODB</th>
				<td>「オブジェクト指向DB」のことで、字面通りオブジェクト指向を取り入れたDBです。<br /><br />主にテキスト・画像・動画などの異なる形式のデータが混在するデータを管理するのに用いられます。</td>
			</tr>
			<tr>
				<th>ハイパテキストDB</th>
				<td>複数のテキストを相互に関連付けて管理するDBです。<br /><br />ほとんど使用されません。</td>
			</tr>
			<tr>
				<th>マルチメディアDB</th>
				<td>テキスト・画像・動画・音声を保存するのに適したDBです。<br /><br />ほとんど使用されません。</td>
			</tr>
			<tr>
				<th>XML DB</th>
				<td>XMLをそのまま格納できるDBです。<br /><br />検索文として「SQL」ではなく「Xpath」「XQuery」を用います。<br /><br />関係DBと比較すると、処理速度では劣りますが保守性・拡張性に優れています。</td>
			</tr>
		</tbody>
	</table>
</div>
<h2>3層スキーマ構造</h2>
DBでは3つの視点からデータの構造を区別することでデータの独立性を高めています。<br /><br />それぞれの視点と特徴について学びましょう♪
<div class="scroll-600w">
	<table>
		<caption>3層スキーマ</caption>
		<tbody>
			<tr>
				<th>外部スキーマ</th>
				<td>
					ユーザやプログラムから見たデータの構造のことです。
					<p>副スキーマとも呼ばれます。</p>
			</tr>
			<tr>
				<th>概念スキーマ</th>
				<td>論理的なデータの構造のことで、外部スキーマと内部スキーマの橋渡しをします。</td>
			</tr>
			<tr>
				<th>内部スキーマ</th>
				<td>
					物理的なデータの構造のことです。
					<p>記憶スキーマとも呼ばれます。</p>
			</tr>
		</tbody>
	</table>
</div>
<h2>DBMS</h2>
「DataBase Management System」の略で、「データベース管理システム」と訳されます。<br /><br />データベースとアプリケーションプログラムの仲介を担当してデータベースの管理を効率化・簡易化するためのシステムで、具体的には以下の機能を持ちます。
<ul>
	<li>データベース定義機能</li>
	<li>データベース操作機能</li>
	<li>データベース制御機能</li>
	<li>データベース保全機能</li>
	<li>データベース機密保護機能</li>
</ul>
<h2>排他制御</h2>
別名、「同時実行制御」です。<br /><br />ひとつのリソースに対して複数のプロセス(プログラム)が同時にアクセスして処理をすることで、データの一貫性が失われることを防ぐために技術です。<br /><br />一般的には以下の手順を踏みます。
<ol>
	<li>リソースのロック(占有)</li>
	<li>リソースの操作</li>
	<li>リソースのロックの解除</li>
</ol>
リソースをロック期間はクリティカルセクションを包括するように設定します。<br /><small>(ロック &rarr; クリティカルセクション &rarr; ロック解除)</small>
<div class="explanation">
	<div class="title">クリティカルロック</div>
	他のプロセスのアクセスを許すと正しい処理を行えなくなる部分を言います。
</div>
また、排他制御の具体的な実装メカニズムとしてセマフォシステムがあります。
<div class="explanation">
	<div class="title">セマフォシステム</div>
	Dijkstraによって発明された排他制御の実装方法です。<br /><br />クリティカルセクションに入る前にP操作、クリティカルセクションから出る際にV操作を行います。
	<div class="scroll-600w">
		<table>
			<tbody>
				<tr>
					<th>P操作</th>
					<td>セマフォ変数に「1」を減算<br />マイナスになれば待ち行列へ</td>
				</tr>
				<tr>
					<th>V操作</th>
					<td>セマフォ変数に「1」を加算<br />加算前がマイナスならば待ち行列の先頭のプロセスを実行</td>
				</tr>
			</tbody>
		</table>
	</div>
</div>
セマフォ変数は最初に「1」を与えられます。
<h2>デッドロック</h2>
プロセスがリソースを無秩序にロック・アンロックすることで、複数のプロセスがお互いにリソースの解放を待ちあってしまい、永遠に処理が行えない状態に陥ることを言います。<br /><br />デッドロックを防ぐためには「<span class="underline">リソースのロック順序を一意に揃える</span>」ことが必要です。
<div class="exam">
	&#9836;&#9836;&#9836; 令和3年春試験午前&#8545;問21 &#9836;&#9836;&#9836;
	<div class="separator"></div>
	デッドロック回避策として「<strong>複数レコードを更新するときにロックを掛ける順番を決めておき、全てのバッチ処理がこれに従って処理するように設計する</strong>」と説明しています。<br /><br />
</div>
<span id="href_transaction"></span>
<h2>トランザクション</h2>
一連の不可分な処理単位のことを言います。<br /><br />例えば、ECサイトでの商品購入・銀行の振込などの処理があげられます。<br /><br />処理の途中でトランザクションが異常終了すると、「クレカの決済はされたが商品が購入されない」「振込口座からお金は引かれたが払い込み口座にお金が入らない」といった矛盾が生じます。<br /><br />このような矛盾を防ぐためにトランザクションは<span class="underline">ACID特性</span>を備える必要があります。
<div class="scroll-600w">
	<table>
		<caption>ACID特性</caption>
		<tbody>
			<tr>
				<th>Atomicity</th>
				<th>原子性</th>
				<td>トランザクションは「全て実行される」or「全く実行されない」のどちらかである。</td>
			</tr>
			<tr>
				<th>Consistency</th>
				<th>一貫性</th>
				<td>トランザクションはDBの内容を矛盾させない。</td>
			</tr>
			<tr>
				<th>Isolation</th>
				<th>独立性</th>
				<td>トランザクションは他のトランザクションの影響を受けない。</td>
			</tr>
			<tr>
				<th>Durability</th>
				<th>耐久性</th>
				<td>正常に終了したトランザクションの結果が失われない。</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="exam">
	&#9836;&#9836;&#9836; 令和2年秋試験午前&#8545;問21 &#9836;&#9836;&#9836;
	<div class="separator"></div>
	DBMSがトランザクションのコミット処理を完了するタイミングとして、「<strong>ログファイルへのコミット情報書込み完了時点</strong>」を選択する問題が出題されました。
</div>
<h2>データ辞書</h2>
あるシステムが利用するデータの情報(名称・型・意味・etc...)をまとめたものを言います。
<?php footer(); ?>