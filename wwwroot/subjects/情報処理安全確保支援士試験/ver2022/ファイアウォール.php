<?php
require(__DIR__. "/../../framework/ver3.1/common.php");
$obj = array(
	"made" => "2022-03-20",
	"updated" => "2022-03-20"
);
head($obj);
?>
<p id="message">セキュリティ対策といえばファイアウォール!!!<br /><small>僕が小学生の時は、炎の壁って感じで中身はよくわかりませんでしたけど、なんだか大好きでした♪</small><br /><br />今回はファイアウォールの仕組み・適切な実装方法について学びましょう♪<br />以下では、ファイアウォールを省略してFWと表記します。<br /><br />それでは、Let's smile!!</p>
<h2>FWの概要</h2>
FWとは、複数のネットワークセグメント間において<span class="underline">ACL(管理者が設定したルール)</span>に基づいてパケットの中継可否を判断・実行する機能を言います。
<div class="explanation">
	<div class="title">ACL</div>
	「Access Control List」の略で、中継を認める(拒否する)「送信元・送信先IPアドレス」や「送信元・送信先ポート」を登録したリストを言い、アクセス制御(パケットフィルタリング)を実現するために用いられます。
</div>
FWに似た侵入・攻撃探知機能を持つものとして以下の機能があげられます。
<div class="scroll-600w">
	<table>
		<tbody>
			<tr>
				<th>FW</th>
				<td>「IPアドレス」「ポート番号」に基づいてパケットを中継・遮断を決定します。<br />問題点として、許可されたサービスの裏(セキュリティホール)をついた攻撃は遮断できません。</td>
			</tr>
			<tr>
				<th>IDS</th>
				<td>「Intrusion Detection System」の略で「侵入<span class="underline">検知</span>システム」と訳されます。<br />ネットワーク上で動作するNIDSとホスト上で動作するHIDSの2つに分類されます。</td>
			</tr>
			<tr>
				<th>NIDS</th>
				<td>Network上で動作するIDSです。接続されたネットワークセグメント上を流れるパケットを監視して<span class="underline">OS・ミドルウェアのセキュリティホールを突いた攻撃を検知</span>します。<br />問題点として、暗号化されたパケットは監視できません。</td>
			</tr>
			<tr>
				<th>HIDS</th>
				<td>Host上で動作するIDSです。特定のホストに常駐してBOF攻撃・マルウェアの侵入を検知します。</td>
			</tr>
			<tr>
				<th>IPS</th>
				<td>「Intrusion Prevention System」の略で「侵入<span class="underline">防御</span>システム」と訳されます。<br />IDSを進化させて「検知」だけでなくて「防御」も可能にした機能です。<br />ネットワーク上で動作するNIPSとホスト上で動作するHIPSの2つに分類されます。</td>
			</tr>
			<tr>
				<th>NIPS</th>
				<td>Network上で動作するIPSです。<br /><span class="underline">インライン接続</span>体制をとることで、NIDSよりも強力な侵入検知・防御機能を実現します。</td>
			</tr>
			<tr>
				<th>NIPS</th>
				<td>host上で動作するIPSです。<br />特定のホストに常駐してBOF攻撃・マルウェアの侵入を検知・防御します。</td>
			</tr>
			<tr>
				<th>WAF</th>
				<td>webアプリケーション用のFWのことで、「XSS」「SQLインジェクション」などのwebアプリケーションに対する攻撃を検知・防御します。<br />以下の機能を備えているWAFの利用が進んでいます。
					<ul>
						<li>SSLアクセラレータ機能<br />→暗号化通信を復元して攻撃を検知。防御することができる。</li>
						<li>負荷分散機能</li>
					</ul>
				</td>
			</tr>
			<tr>
				<th>サンドボックス</th>
				<td>実環境から隔離されたサンドボックス(セキュアな仮想環境)で不審なファイルやurlリンクにアクセスして、その結果を観察することで攻撃を検知・遮断します。</td>
			</tr>
		</tbody>
	</table>
</div>
近年は、IPS(侵入防御システム)やWAF(webアプリケーションFW)も含んだ広い意味で「FW」という用語が用いられるようになっていますが、ここでは狭義(ACLに基づいてパケットフィルタリングを行う機能のみ)をFWと呼びます。
FWの構成として以下の形式があげられます。<br />試験では必ずこういったネットワーク構成を利用した問題が出てくるので、なんとなく「こんな構成があるんだなぁ」と覚えといてくださいね♪
<div class="explanation">
	<div class="title">公開サーバを内部セグメントに接続</div>
	<img src="../pics/firewall1.png" alt="ファイアウォール" />
	以下の特徴があります。
	<ul>
		<li>インターネットから内部へのアクセスは公開サーバに対するものを除いて全て遮断</li>
		<li>FWによって公開サーバへのアクセスを最小限に設定</li>
		<li>一度侵入を許すとそこから他のホストにまで影響が及ぶ可能性大</li>
		<li>C&amp;Cサーバによる不正通信に対して脆弱</li>
	</ul>
</div>
<div class="explanation">
	<div class="title">公開サーバをバリアセグメントに接続</div>
	<img src="../pics/firewall2.png" alt="ファイアウォール" />
	以下の特徴があります。
	<ul>
		<li>FWから内部へのアクセスは全て遮断</li>
		<li>バリアセグメントから内部セグメントへの通信は一部許可</li>
		<li>FWはバリアセグメントに対する攻撃は遮断不可</li>
		<li>C&amp;Cサーバによる不正通信に対して脆弱</li>
	</ul>
</div>
<div class="explanation">
	<div class="title">1つのFWで3つのセグメントを接続</div>
	<img src="../pics/firewall3.png" alt="ファイアウォール" />
	1つ前の「公開サーバをバリアセグメントに接続」する方法だと、インターネットからバリアセグメントに対する通信は一切遮断できません。<br />この問題を解決して、インターネットからDMZに対する通信の一部のみを許可することによってさらにセキュリティを高めた形態です。<br /><br />ちなみに、DMZとは「De-Militalized Zone」の略で「非武装地帯」と訳されます。役割としては、外部セグメントと内部セグメントの緩衝的な存在となります。<br /><br />以下の特徴があります。
	<ul>
		<li>FWによってDMZへのアクセスを最小限に</li>
		<li>インターネットから内部セグメントに対するアクセスは全て遮断</li>
		<li>DMZから内部セグメントに対するアクセスは最小限に</li>
		<li>DMZへの侵入を許しても、内部セグメントにまで影響が及ばない</li>
		<li>C&Cサーバによる不正通信に対して脆弱</li>
	</ul>
</div>
<div class="explanation">
	<div class="title">2つのFWの間にDMZを接続</div>
	<img src="../pics/firewall4.png" alt="ファイアウォール" />
	「1つのFWで3つのセグメントを接続」とほとんど同じ機能を実現しますが、2つのFWを異なるベンダが提供するものにすることでさらにセキュリティを高めることができます。<br /><br />特徴は「1つのFWで3つのセグメントを接続」とほとんど同じです。(最後の特徴を付け加えただけです。)
	<ul>
		<li>外側のFWによってDMZへの通信の一部を遮断</li>
		<li>2つのFWによってインターネットから内部セグメントに対するアクセスは全て遮断</li>
		<li>DMZから内部セグメントに対するアクセスは最小限に</li>
		<li>DMZへの侵入を許しても、内部セグメントにまで影響が及ばない</li>
		<li>C&Cサーバによる不正通信に対して脆弱</li>
		<li>2つのFWを異なる製品にすることでセキュリティを向上可能</li>
	</ul>
</div>
<div class="explanation">
	<div class="title">セキュリティレベルに応じて異なるDMZを構成</div>
	<img src="../pics/firewall5.png" alt="ファイアウォール" />
	「2つのFWの間にDMZを接続」の仕組みをさらに改善して、セキュリティレベルの異なる他のホストにアクセスするためにさらに別のDMZを設定します。<br /><br />以下の特徴があります。
	<ul>
		<li>各ホストの用途やセキュリティレベルに応じた最適なアクセス制御機能を実現</li>
		<li>負荷分散による高パフォーマンスの実現</li>
		<li>インターネットから内部セグメントに対するアクセスを全て遮断</li>
		<li>内部セグメントからインターネットに対するアクセスを全て遮断することで、C&Cサーバによる不正通信を防止</li>
	</ul>
	このFW構成と同様の機能を実現する仕組みとして、「<span class="underline">タグVLAN(IEEE 802.1Q)</span>」があります。
</div>
<h2>FWのフィルタリング方式</h2>
FWのパケットのフィルタリング(中継可否の判定・実行)する際の仕組みは以下の5つがあります。
<div class="scroll-600w">
	<table>
		<tbody>
			<tr>
				<th>パケットフィルタ型</th>
				<td>
					正式名称、「スタティックパケットフィルタ型フィルタリング」です。<br />この方法では、パケットのヘッダ情報に含まれる<span class="underline">「IPアドレス」「ポート番号」「パケットの方向」「プロトコル」</span>に基づいて中継可否を判断します。<br /><br />以下の特徴があります。
					<ul>
						<li><span class="underline">インターネット層</span>でパケットを<span class="underline">中継</span><br /><small>※FW自身はコネクションを確立しない。</small></li>
						<li><span class="underline">パケットのデータ部(ペイロード)はチェックしない。</span></li>
						<li>ACLの上の行から順に参照される。<br /><small>※優先度高いものから順に登録する必要がある。</small></li>
						<li>ACLには両方向のパケットについて登録する必要がある。</li>
						<li>実行効率が高い。</li>
						<li>複雑な処理には適していない。</li>
					</ul>
					<span class="underline">ペイロード部まで検査できないため、Webサーバに対する<a href="サービス不能型攻撃?to=href_bof">BOF攻撃</a>を防御できません。</span>
				</td>
			</tr>
			<tr>
				<th>アプリケーションゲートウェイ型</th>
				<td>
					パケットフィルタ型と異なり、<span class=underline>パケットのデータ部(ペイロード)までチェックします。</span><br /><br />具体的な実装としては、個々のアプリケーションプログラムごとに別々のプロキシを持ち、パケットのデータ部も含めてチェックします。<br />以下の特徴があります。
					<ul>
						<li>ペイロードもチェックするため、より細かい制御が可能。</li>
						<li>FW自身がクライアントとコネクションを確立した後に、目的のサーバにクライアントに代わってコネクションを確立する。</li>
						<li>ACLにはクライアントからサーバ方向のみを登録する。</li>
						<li>FW自身がコネクションを確立するため、実行効率は低い。</li>
					</ul>
				</td>
			</tr>
			<tr>
				<th>サーキットレベルゲートウェイ型</th>
				<td>
					アプリケーションゲートウェイ型と同様、FW自身がクライアントとコネクションを確立します。<br />アプリケーションゲートウェイ型と異なる点は、目的サーバとコネクションを確立する際は<span class="underline">トランスポート層で</span><span class="underline">バーチャルサーキット(仮想的な通信路)を形成して</span>コネクションを確立します。<br />以下の特徴があります。
					<ul>
						<li>フィルタリングはトランスポート層で実行</li>
						<li><a href="OSI基本参照モデル?to=href_se-protocol">SOCKS</a>がこの仕組みを採用。</li>
						<li>ペイロードまではチェックしない。</li>
						<li>クライアント側のアプリケーションプログラムがこの方式に対応している必要がある。</li>
					</ul>
				</td>
			</tr>
			<tr>
				<th>ダイナミックパケットフィルタ型</th>
				<td>
					最初にコネクションを確立する方向のみをACLに登録して、実際の接続要求に対応して動的にルールを生成してフィルタリング処理を行います。<br />以下の特徴があります。
					<ul>
						<li>過去の通信から中継可否を判定することで、より精度の高いフィルタリングが可能。</li>
						<li>余分なルールは作成されない(不要になったルールは破棄される)ため、ACL設定ミスが生じにくい。</li>
					</ul>
				</td>
			</tr>
			<tr>
				<th>ステートフルインスペクション型</th>
				<td>ダイナミックパケットフィルタリング型の進化バージョンで、アプリケーションごとの通信フロー情報(ステート情報/セッション情報)からレイヤを限定しないより精密なアクセス制御を実現します。</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="exam">
	&#9836;&#9836;&#9836; 令和3年春試験午前&#8545;問6 &#9836;&#9836;&#9836;
	<br />
	&#9836;&#9836;&#9836; 平成31年秋試験午前&#8545;問17 &#9836;&#9836;&#9836;
	<div class="separator"></div>
	ステートフルパケットパケットインスペクション方式のFWに関して、「<strong>パケットフィルタリングを拡張した方式であり、過去に通過したパケットから通信セッションを認識し、受け付けたパケットを通信セッションの状態に照らし合わせて遮断するかを判断する</strong>」と説明されています。
	<div class="super_separator"></div>
	&#9836;&#9836;&#9836; 令和元年秋試験午前&#8545;問5 &#9836;&#9836;&#9836;
	<div class="separator"></div>
	ダイナミックパケットフィルタリングの特徴として、「<strong>過去に通過したリクエストパケットに対応付けられる戻りのパケットを通過させることができる。</strong>」と説明しています。
</div>
<h2>ACL設定における考え方</h2>
中継可否の判定においては、デフォルトで全て拒否してそこに許可するルール(ホワイトリスト)を設定する「<span class="underline">ポジティブセキュリティモデル</span>」とデフォルトで全て許可してそこに拒否するルール(ブラックリスト)を設定する「<span class="underline">ネガティブセキュリティモデル</span>」の2つがあります。<br /><br />フォールスポジティブは想定されるパケットを網羅していない場合はそれが脆弱性となるため一般に危険であると言えます。<br /><br />次回は、FWのお友達、「IDS・IPS・WAF」について学びましょう♪
<?php footer(); ?>