<?php
require(__DIR__. "/../../framework/ver3.1/common.php");
$obj = array(
	"made" => "2022-03-22",
	"updated" => "2022-03-22"
);
head($obj);
?>
<p id="message">今回はデータベースの管理全般に関する知識を身につけましょう♪<br /><br />それでは、Let's explore!!</p>
<h2>インデックス(索引)</h2>
索引データと行データの格納位置を関連付けることで、これを用いた索引検索では全件検索よりもアクセス効率が向上します。<br /><br />大量のデータから<span class="underline">少しの行</span>を検索する際に有効です。<br /><br />インデックスのオプションとしては以下の2つがあります。
<div class="scroll-scroll-600w">
	<table>
		<tbody>
			<tr>
				<th>クラスタ化</th>
				<td>
					データ行をそのキー値に基づいて並べ替えて格納することで高速な処理を可能にします。<br />ヒープ領域を使用せずに実データを物理的に並び替えます。
					<p>実データをインデックス内に格納するのでテーブル内で1つしか作成できません</p>
				</td>
			</tr>
			<tr>
				<th>ユニーク</th>
				<td>
					インデックスの対象となるテーブルのカラムに格納されている値に重複がないように設定します。<br />IDなどの重複が許されないカラムに利用されます。
					<p>似た機能として「プライマリー」がありますが、プライマリーはユニークと異なりテーブルにひとつしか設定できません。</p>
				</td>
			</tr>
		</tbody>
	</table>
</div>
<h2>コミットメント制御</h2>
最初のデータベースの授業で<a href="データベース?to=href_transaction">ACID特性</a>について学びましたね♪<br /><br />コミットメント制御とは、そのうちの<strong>A(原子性)</strong>を保証するための技術です。<br /><br />具体的には、<span class="underline">トランザクションが正しく完了した際には「コミット処理」</span>、<span class="underline">トランザクションが正しく完了しなかった場合は「ロールバック処理」</span>を実行します。
<h2>障害回復制御</h2>
DBMSは万が一障害が発生しても、データを矛盾させずにデータを障害発生直前の状態に戻すことが求められます。<br /><br />これを実現するために以下の2つの情報を利用します。
<ul>
	<li>バックアップデータ</li>
	<li>ログ(ジャーナル)ファイル</li>
</ul>
障害発生時には、障害発生時にチェックポイントを通過しているトランザクションは「<strong>ロールフォワード</strong>」でトランザクションを完了させて、障害発生時にチェックポイントを通過していないトランザクションは「<strong>ロールバック</strong>」でトランザクションを取り消します。
<p>チェックポイント以前にコミットが完了しているトランザクションは回復の必要はありません。</p>
<div class="exam">
	&#9836;&#9836;&#9836; 令和3年春試験午前&#8545;問24 &#9836;&#9836;&#9836;
	<div class="separator"></div>
	ロールフォワードを「<strong>ディスク障害時に、フルバックアップを取得してあるテープからディスクにデータを復元した後、フルバックアップ取得以降の更新後コピーをログから反映させてデータベースを回復する方法</strong>」と説明しています。<br /><br />
</div>
<h2>バックアップ</h2>
データベースなどの記憶媒体に障害が発生した際に速やかにデータを回復することを目的としています。<br /><br />バックアップの取得方法には以下の3つがあります。
<div class="scroll-600w">
	<table>
		<tbody>
			<tr>
				<th>フルバックアップ</th>
				<td>すべてをバックアップします。</td>
			</tr>
			<tr>
				<th>差分バックアップ</th>
				<td>前回の<span class="underline">フルバックアップ</span>時から変更された部分のみをバックアップします。</td>
			</tr>
			<tr>
				<th>増分バックアップ</th>
				<td>前回の<span class="underline">バックアップ</span>時から変更された部分のみをバックアップします。</td>
			</tr>
		</tbody>
	</table>
</div>
<?php footer(); ?>