<?php
require_once("common.php");
include_head("暗号技術");
?>

<div id = "main">
	<p id = "my_comment">情報セキュリティ特性のCIAを覚えていますか???<br><br>「機密性・完全性・可用性」でしたね♪<br>今回はそのうちの「機密性」を保証するための技術、<span class = "underline">暗号</span>について学んでいきます。<br><br>それでは、Let's yell!</p>
	<h2>CRYPTREC暗号リスト</h2>
	<p><strong>CRYPTREC</strong> (<strong>C</strong>ryptography <strong>R</strong>esearch and <strong>E</strong>valution <strong>C</strong>ommittees)とは、電子政府推奨暗号の安全性を評価・監視し、暗号技術の適切な実装・運用を図るプロジェクトであり、そのCRYPTRECがオススメしている暗号一覧がCRYPTREC暗号リストです。<br><br>以下でCRYPTREC暗号リストの内容を紹介しますね♪<br>これからの複数回の授業で扱う内容の概要です。</p>
	<div class = "scroll_x" id = "crptrec_list_table">
		<table border = "1">
			<caption>CRYPTREC暗号リスト</caption>
			<tbody>
				<tr>
					<th rowspan = 7>公開鍵技術</th>
					<th rowspan = 4>署名</th>
					<td>DSA</td>
				</tr>
				<tr>
					<td>ECDSA</td>
				</tr>
				<tr>
					<td>RSA-PSS</td>
				</tr>
				<tr>
					<td>RSASSA-PKCS1-v1_5</td>
				</tr>
				<tr>
					<th>守秘</th>
					<td>RSA-OAEP</td>
				</tr>
				<tr>
					<th rowspan = 2>鍵共有</th>
					<td>DH</td>
				</tr>
				<tr>
					<td>ECDH</td>
				</tr>
				<tr>
					<th rowspan = 4>共通鍵暗号</th>
					<th>64ビットブロック暗号</th>
					<td>該当なし</td>
				</tr>
				<tr>
					<th rowspan = 2>128ビットブロック暗号</th>
					<td>AES</td>
				</tr>
				<tr>
					<td>Camellia</td>
				</tr>
				<tr>
					<th>ストリーム暗号</th>
					<td>KCipher</td>
				</tr>
				<tr>
					<th rowspan = 3 colspan = 2>ハッシュ暗号</th>
					<td>SHA-256</td>
				</tr>
				<tr>
					<td>SHA-384</td>
				</tr>
				<tr>
					<td>SHA-512</td>
				</tr>
				<tr>
					<th rowspan = 6>暗号利用モード</th>
					<th rowspan = 4>秘匿モード</th>
					<td>CBC</td>
				</tr>
				<tr>
					<td>CFB</td>
				</tr>
				<tr>
					<td>CTR</td>
				</tr>
				<tr>
					<td>OFB</td>
				</tr>
				<tr>
					<th rowspan = 2>秘匿モード</th>
					<td>CCM</td>
				</tr>
				<tr>
					<td>GCM</td>
				</tr>
				<tr>
					<th rowspan = 2 colspan = 2>メッセージ認証コード</th>
					<td>CMAC</td>
				</tr>
				<tr>
					<td>HMAC</td>
				</tr>
				<tr>
					<th colspan = 2>認証技術</th>
					<td>該当なし</td>
				</tr>
				<tr>
					<th rowspan = 2 colspan = 2>エンティティ認証</th>
					<td>ISO/IEC 9798-2</td>
				</tr>
				<tr>
					<td>ISO/IEC 9798-3</td>
				</tr>
			</tbody>
		</table>
		<span class = "quote">※引用は<a href = "https://www.cryptrec.go.jp/list.html">こちら</a>。</span>
	</div>
	<p>※暗号に関するその他の規格は<a href = "column/encript-standards">こちら</a>。<br><br>いっきに全部を覚えるのは難しいと思いますが、これから複数回にわたる暗号技術の授業で役に立つと思いますので何度も見返しに来てくださいね♪</p>
	<div class = "exam">
		&#9836;&#9836;&#9836; 令和2年秋試験午前&#8545;問8 &#9836;&#9836;&#9836;
		<div class = "separator"></div>
		CRIPTRECの活動として「<strong>暗号技術の技術的検討並びに国際的競争力の向上及び運用面での安全的向上に関する検討を行う</strong>」と説明されています。
		<div class = "super_separator"></div>
		&#9836;&#9836;&#9836; 令和元年秋試験午前&#8545;問8 &#9836;&#9836;&#9836;
		<div class = "separator"></div>
		CRIPTRECを構成する暗号リストに関して、「<strong>電子政府推奨暗号リストとは、CRIPTRECによって安全性及び実装性能が確認された暗号技術のうち、市場における利用実績が十分であるか今後の普及が見込まれると判断され、当該技術の利用を推奨するもののリストである。</strong>」と説明されています。
		<div class = "super_separator"></div>
		&#9836;&#9836;&#9836; 平成31年春試験午前&#8545;問9 &#9836;&#9836;&#9836;
		<div class = "separator"></div>
		CRYPTREC暗号リストにある推奨候補リストに関して、「<strong>安全性及び実装機能が確認され、今後、電子政府推奨暗号リストに掲載される可能性がある暗号技術のリストである。</strong>」と説明しています。
	</div>
	<h2>暗号</h2>
	<p>暗号とは、あるデータ(文字・記号)を第三者に解読されないように何らかのルールに則って他の文字・記号に変換することを言います。(by me)<br><br>例えば、「すきだよ」という言葉を暗号化してみましょう。<br>僕は「せくぢわ」になりました。<br>僕がどのようなルールに則って暗号化したと思いますか???<br>答えは単純に文字を50音で考えてひとつ先に進めました。<br><br>ですけどこれだとすぐ解読(第三者に読まれこと)されてしまいますよね、、、<br><br>ではもう一度暗号化してみますね♪<br>「4s57&(:*gDyf」になりました。<br>今回はどんなルールに則って変換したか分からないと思います。<br>テキトーにキーボードを叩いただけなので笑<br><br>ですけど、これだと本当に伝えたい相手にも「すきだよ」って伝えられないですよね、、、<br><br>暗号技術で大切なことは<span class = "underline">「暗号化と復号」</span>です。<br><span class = "underline">暗号化するためのアルゴリズムを暗号鍵、復号するするためのアルゴリズムを復号鍵</span>と呼びます。</p>
	<h2>暗号方式</h2>
	<p>では、どうやって暗号化するかですよね、、、<br>いくつか方法があるので紹介しますね♪</p>
	<div class = "scroll_x">
		<table border = "1">
			<caption>主な暗号方式</caption>
			<tbody>
				<tr>
					<th>転置式暗号方式</th>
					<td>一定のルーにル則って文字・記号の順番を入れ替え方法です。<br>「すきだよ」→「きよすだ」</td>
				</tr>
				<tr>
					<th>換字式暗号方式</th>
					<td>一定のルールに則って文字・記号を他の文字に変換します。<br>「すきだよ」→「せくぢわ」</td>
				</tr>
				<tr>
					<th>共通鍵暗号方式</th>
					<td>かなり数学的な方法です。<br>覚えてほしいのは、<span class = "underline">暗号と復号で同じ鍵を用いる</span>ことです。</td>
				</tr>
				<tr>
					<th>公開鍵暗号方式</th>
					<td>かなり数学的な方法です。<br>覚えてほしいのは、<span class = "underline">暗号と復号で異なる鍵を用いる</span>ことです。</td>
				</tr>
			</tbody>
		</table>
	</div>
	<span id = "href_ckey"></span>
	<h2>共通鍵暗号方式</h2>
	<p>共通鍵暗号方式は暗号化と復号に同じ鍵(アルゴリズム)を用いる暗号手法です。</p>
	<svg
		viewBox="0 0 158.75 105.83334"
		version="1.1"
		xmlns="http://www.w3.org/2000/svg"
		xmlns:svg="http://www.w3.org/2000/svg">
		<ellipse
			cx="26.102137"
			cy="33.774052"
			rx="16.049288"
			ry="14.726543"
			class="e_node_face" />
		<circle
			cx="30.220909"
			cy="30.032007"
			r="3.3509502"
			class="white" />
		<circle
			cx="21.953112"
			cy="29.896597"
			r="3.3509502"
			class="white" />
		<path
			d="M 15.255641,34.761787 26.058046,45.564192 36.904543,34.717696 26.100513,40.955404 Z"
			class="white" />
		<ellipse
			cx="126.45538"
			cy="33.920971"
			rx="16.049288"
			ry="14.726543"
			class="d_node_face" />
		<circle
			cx="130.57416"
			cy="30.178928"
			r="3.3509502"
			class="white" />
		<circle
			cx="122.30635"
			cy="30.043518"
			r="3.3509502"
			class="white" />
		<path
			d="m 115.60889,34.908706 10.80241,10.802405 10.84649,-10.846496 -10.80403,6.237708 z"
			class="white" />
		<path
			d="M 26.097305,59.451373 c 8.811991,1.423771 9.114876,8.997702 0.666064,11.026722 l 0.04785,5.105189 h 4.873778 v 1.548486 h -4.873776 v 3.871217 h 4.742052 l 2e-6,1.419445 -6.194771,-0.04748 -0.03025,-11.88728 c -7.876964,-2.406201 -7.511581,-9.61244 0.769051,-11.036296 z"
			class="key" />
		<path
			transform="rotate(0, 0, 0)"
			d="M 128.0214,60.098519 c 8.81199,1.423771 9.11487,8.997702 0.66606,11.026722 l 0.0478,5.105189 h 4.87378 v 1.548486 h -4.87378 v 3.871216 h 4.74205 l 1e-5,1.41945 -6.19478,-0.0475 -0.0302,-11.887284 c -7.87697,-2.406201 -7.51159,-9.61244 0.76905,-11.036296 z"
			class="key" />
		<path
			d="M 40.156445,71.412563 77.693994,63.227691 114.98212,71.70539 77.872951,79.351739 Z"
			id="same_obj" />
		<text
			class="large_txt"
			x=67
			y=75 >
			同じ
		</text>
	</svg>
	<div class = "scroll_x">
		<table border = "1">
			<caption>共通鍵暗号方式</caption>
			<tbody>
				<tr>
					<th>利点</th>
					<td>
						<ul>
							<li>単純であるため処理が簡単。</li>
						</ul>
					</td>
				</tr>
				<tr>
					<th>欠点</th>
					<td>
						<ul>
							<li>送信相手に安全に鍵を送るのが困難。</li>
							<li>鍵の数が多くなり管理が困難。</li>
						</ul>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
	<p>最初のCRIPTREC暗号リストで簡単に説明しましたが、共通鍵暗号方式は「ブロック暗号方式」と「ストリーム暗号方式」に分類されます。<br><br>それぞれの特徴を覚えましょう♪</p>
	<div class = "scroll_x">
		<table border = "1">
			<caption>共通鍵暗号方式の種類</caption>
			<tbody>
				<tr>
					<th>ストリーム暗号方式</th>
					<td>平文を<span class = "underline">ビット・バイト・文字ごとに暗号化</span>します。<br><br>代表的な方法に「RC4」や「KCipher-2」があります。<br><small>※RC4は危殆化が進んでいるため非推奨。</small></td>
				</tr>
				<tr>
					<th>ブロック暗号方式</th>
					<td>平文を一定のサイズ(ブロック)に分割して暗号化を行う方法です。<br><br>代表的な方法に「DES」・「3DES」・「AES」・「Camellia」・「IDEA」があります。<br><small>※「DES」と「3DES」は危殆化が進んでいるため非推奨。</small><br><br>また、各ブロックごとにどのように暗号化するかによって<span class = "underline">「ECB」・「CBC」・「CFB」・「OFB」</span>に分類されます。(暗号モード)</td>
				</tr>
			</tbody>
		</table>
	</div>
	<p>ストリーム暗号方式とブロック暗号方式の代表的な方法について説明しますね♪</p>
	<div class = "scroll_x">
		<table border = "1">
			<caption>ストリーム暗号方式</caption>
			<tbody>
				<tr>
					<th>RC4</th>
					<td>Ron Rivestが1987年に開発して事実上標準のストリーム暗号方式となったが、近年は危殆化が進んでいるため非推奨。</td>
				</tr>
				<tr>
					<th>KCipher-2</th>
					<td>developed by 「九州大学 & KDDI研究所」<br>CRIPTREC暗号リスト推奨。<br>鍵とIVの長さは「128ビット」。</td>
				</tr>
			</tbody>
		</table>
	</div>
	<div class = "scroll_x">
		<table border = "1">
			<caption>ブロック暗号方式</caption>
			<tbody>
				<tr>
					<th>DES</th>
					<td>「Data Encription Standard」の略で少し前までは米政府の標準。<br>ブロック長は「64ビット」。<br>危殆化が進んでいるため非推奨。</td>
				</tr>
				<tr>
					<th>3DES</th>
					<td>「Triple DES」の略で、DESの3重バージョンです。こちらも危殆化が進んでいるため非推奨。</td>
				</tr>
				<tr>
					<th>AES</th>
					<td>「Advanced Encription Standard」の略で、DESの進化バージョン。<br>ブロック長は「128/192/256ビット」。<br><span class = "underline">CRIPTREC暗号リスト推奨</span>。</td>
				</tr>
				<tr>
					<th>Camellia</th>
					<td>developed by 「NTT & 三菱電機」<br>AESと同等の強度・効率性。<br>ブロック長は「128/192/256ビット」<br><span class = "underline">CRIPTREC暗号リスト推奨</span>。</td>
				</tr>
			</tbody>
		</table>
	</div><br>
	<div class = "exam">
		&#9836;&#9836;&#9836; 令和3年春試験午前&#8545;問7 &#9836;&#9836;&#9836;
		<div class = "separator"></div>
		AESの鍵長の条件として、「<strong>128ビット、192ビット、256ビットから選択する。</strong>」と説明しています。
		<div class = "super_separator"></div>
		&#9836;&#9836;&#9836; 平成30年春試験午前&#8545;問1 &#9836;&#9836;&#9836;
		<div class = "separator"></div>
		AESの特徴として、「<strong>鍵長によって、段数が決まる。</strong>」と説明しています。
	</div>
	<span id = "href_mode"></span>
	<p>次にブロック暗号方式の暗号モード(各ブロックごとにどのように暗号化するか)を4つ紹介します。</p>
	<div class = "explanation">
		<span class = "underline">ECB</span>とは、、、<br><br>「Electronic Code Book」の略で、単にブロックに分割してそれぞれを独立して暗号化する方法です。<br>ブロック暗号方式を採用する意味があまりないような、、、って感じです。<br><small>※あくまでも僕個人の感想です。</small>
		<svg
			id="ecb_svg"
			class="cript_mode"
			viewBox="0 0 158.75 105.83334"
			version="1.1"
			xmlns:xlink="http://www.w3.org/1999/xlink"
			xmlns="http://www.w3.org/2000/svg"
			xmlns:svg="http://www.w3.org/2000/svg">
		 	<linearGradient
					id="ecb_gradiation">
				 <stop
					offset="0"/>
				 <stop
					offset="1"/>
			</linearGradient>
			<linearGradient
				xlink:href="#ecb_gradiation"
				id="ecb_gradiation0"
				x1="130.96181"
				y1="225.70642"
				x2="127.65958"
				y2="-65.299683"
				gradientUnits="userSpaceOnUse" />
		  </defs>
		  <rect
				class="b"
				width="35.075695"
				height="11.172259"
				x="24.590965"
				y="12.784996" />
		  <rect
				class="b"
				width="35.075695"
				height="11.172259"
				x="67.006584"
				y="12.784996" />
		  <rect
				class="b"
				width="35.075695"
				height="11.172259"
				x="109.4222"
				y="12.784996" />
		  <rect
				class="a"
				width="35.075695"
				height="11.172259"
				x="24.590965"
				y="80.674103" />
		  <rect
				class="a"
				width="35.075695"
				height="11.172259"
				x="67.006584"
				y="80.674103" />
		  <rect
				class="a"
				width="35.075695"
				height="11.172259"
				x="109.4222"
				y="80.674103" />
		  <path
				class="arw"
				d="m 127.65957,-65.299683 83.97902,145.455944 83.97903,145.455939 -167.95805,-1e-5 -167.958056,0 83.979035,-145.455928 z"
				transform="matrix(0.01475354,0,0,-0.17721891,41.116772,67.458301)" />
		  <path
				class="arw"
				transform="matrix(0.01475354,0,0,-0.17721891,84.116982,66.948663)"
				d="m 127.65957,-65.299683 83.97902,145.455944 83.97903,145.455939 -167.95805,-1e-5 -167.958056,0 83.979035,-145.455928 z" />
		  <path
				class="arw"
				transform="matrix(0.01475354,0,0,-0.17721891,125.94799,66.68884)"
				d="m 127.65957,-65.299683 83.97902,145.455944 83.97903,145.455939 -167.95805,-1e-5 -167.958056,0 83.979035,-145.455928 z" />
		  <path
				d="m 47.712781,40.114478 c 6.919523,5.63901 3.394863,12.34967 -4.936533,9.88245 l -2.511155,4.44515 4.220816,2.43689 -0.774243,1.34102 -4.220814,-2.43688 -1.935609,3.35257 4.106738,2.37102 -0.709721,1.22928 -5.341089,-3.1385 5.917443,-10.30981 c -5.618551,-6.02232 -1.699,-12.08041 6.184167,-9.17319 z"
				class="key" />
		  <path
				d="m 90.521258,38.638639 c 6.919524,5.63902 3.394864,12.34968 -4.936533,9.88245 l -2.511155,4.44515 4.220816,2.43689 -0.774243,1.34103 -4.220814,-2.43689 -1.935609,3.35257 4.106738,2.37103 -0.709721,1.22928 -5.341089,-3.13851 5.917443,-10.30981 c -5.618551,-6.02231 -1.699,-12.08041 6.184167,-9.17319 z"
				class="key" />
		  <path
				d="m 132.35227,39.418098 c 6.91952,5.63902 3.39487,12.34968 -4.93653,9.88245 l -2.51116,4.44515 4.22082,2.43689 -0.77424,1.34103 -4.22082,-2.43689 -1.93561,3.35257 4.10674,2.37103 -0.70972,1.22928 -5.34109,-3.1385 5.91744,-10.30982 c -5.61855,-6.02231 -1.69899,-12.08041 6.18417,-9.17319 z"
				class="key" />
			<text
				x=28
				y=20 >
				平文ブロック1
			</text>
			<text
				x=72
				y=20 >
				平文ブロック2
			</text>
			<text
				x=115
				y=20 >
				平文ブロック3
			</text>
			<text
				x=28
				y=88 >
				暗号ブロック1
			</text>
			<text
				x=72
				y=88 >
				暗号ブロック2
			</text>
			<text
				x=115
				y=88 >
				暗号ブロック3
			</text>
		</svg>
	</div>
	<div class = "explanation">
		<span class = "underline">CBC</span>とは、、、<br><br>「Cipher Block Chaining」の略で、初期ブロックの暗号ブロックと次の平文ブロックを排他的論理和(XOR)演算をしてその結果を暗号化する方法です。<br>最初の平文ブロックに対しては前の暗号ブロックの代わりに初期ベクトル(IV)が与えられます。
		<svg
			id="cbc_svg"
			class="cript_mode"
			viewBox="0 0 158.75 105.83334"
			version="1.1"
			xmlns:xlink="http://www.w3.org/1999/xlink"
			xmlns="http://www.w3.org/2000/svg"
			xmlns:svg="http://www.w3.org/2000/svg">
			<filter
				id="xor0"
				x="-0.076090908"
				y="-0.18599999"
				width="1.1521818"
				height="1.372">
			<feGaussianBlur
				stdDeviation="0.89701517"
				id="xor1" />
			</filter>
			<rect
				class="b"
				width="35.075695"
				height="11.172259"
				x="24.590965"
				y="12.784996" />
			<rect
				class="b"
				width="35.075695"
				height="11.172259"
				x="67.006584"
				y="12.784996" />
			<rect
				class="b"
				width="35.075695"
				height="11.172259"
				x="109.4222"
				y="12.784996" />
			<rect
				class="a"
				width="35.075695"
				height="11.172259"
				x="24.590965"
				y="80.674103" />
			<rect
				class="a"
				width="35.075695"
				height="11.172259"
				x="67.006584"
				y="80.674103" />
			<rect
				class="a"
				width="35.075695"
				height="11.172259"
				x="109.4222"
				y="80.674103" />
			<path
				class="arw"
				d="m 127.65957,-65.299683 83.97902,145.455944 83.97903,145.455939 -167.95805,-1e-5 -167.958056,0 83.979035,-145.455928 z"
				transform="matrix(0.01475354,0,0,-0.17721891,41.116772,67.458301)" />
			<path
				class="arw"
				transform="matrix(0.01475354,0,0,-0.17721891,84.116982,66.948663)"
				d="m 127.65957,-65.299683 83.97902,145.455944 83.97903,145.455939 -167.95805,-1e-5 -167.958056,0 83.979035,-145.455928 z" />
			<path
				class="arw"
				transform="matrix(0.01475354,0,0,-0.17721891,125.94799,66.68884)"
				d="m 127.65957,-65.299683 83.97902,145.455944 83.97903,145.455939 -167.95805,-1e-5 -167.958056,0 83.979035,-145.455928 z" />
			<path
				d="m 46.12261,54.843934 c 5.023605,3.725023 2.464686,8.157958 -3.583945,6.528159 l -1.823111,2.936381 3.064332,1.609764 -0.562104,0.885852 -3.06433,-1.609757 -1.405262,2.214644 2.981512,1.566251 -0.515261,0.812038 -3.877656,-2.073233 4.296091,-6.810464 C 37.553783,56.92534 40.399395,52.923481 46.12261,54.843934 Z"
				class="key" />
			<path
				d="m 89.491177,54.291341 c 5.025076,3.724138 2.465408,8.156011 -3.584993,6.526596 l -1.823644,2.935679 3.065228,1.609377 -0.562269,0.885646 -3.065226,-1.609377 -1.405672,2.214113 2.982382,1.565883 -0.51541,0.811844 -3.87879,-2.072744 4.297347,-6.808833 c -4.080286,-3.97727 -1.233842,-7.978179 4.491047,-6.058184 z"
				class="key" />
			<path
				d="m 131.32087,53.959763 c 5.02525,3.71166 2.4655,8.128685 -3.58511,6.504729 l -1.8237,2.925843 3.06533,1.603986 -0.56229,0.88268 -3.06533,-1.603986 -1.40573,2.206695 2.98249,1.560637 -0.51543,0.809124 -3.87892,-2.065792 4.2975,-6.786029 c -4.08043,-3.963946 -1.23388,-7.951449 4.49119,-6.037887 z"
				class="key" />
			<ellipse
				class="xor"
				cx="42.623146"
				cy="41.428963"
				rx="14.146476"
				ry="5.7871947" />
			<ellipse
				class="xor"
				cx="84.786995"
				cy="41.153385"
				rx="14.146476"
				ry="5.7871947" />
			<ellipse
				class="xor"
				cx="126.95084"
				cy="40.969666"
				rx="14.146476"
				ry="5.7871947" />
			<rect
				class="iv"
				width="18.188326"
				height="11.574389"
				x="1.2860433"
				y="35.45805" />
			<path
				d="m -12.125296,66.382883 -34.397931,0 -34.397933,0 L -63.722194,36.5934 -46.523228,6.8039169 -29.324262,36.5934 Z"
				transform="matrix(0,0.05094205,-0.17515759,0,32.828678,43.523373)"
				class="arrow" />
			<path
				transform="matrix(0.04426926,0.02520567,-0.31095323,0.54613371,74.863404,44.108759)"
				class="arrow"
				d="m -12.125296,66.382883 -34.397931,0 -34.397933,0 L -63.722194,36.5934 -46.523228,6.8039169 -29.324262,36.5934 Z" />
			<path
				transform="matrix(0.04426926,0.02520567,-0.31095323,0.54613371,119.10415,43.770368)"
				class="arrow"
				d="m -12.125296,66.382883 -34.397931,0 -34.397933,0 L -63.722194,36.5934 -46.523228,6.8039169 -29.324262,36.5934 Z" />
			<text
				class="iv_txt"
				x=8
				y=42 >
				IV
			</text>
			<text
				x=28
				y=20 >
				平文ブロック1
			</text>
			<text
				x=72
				y=20 >
				平文ブロック2
			</text>
			<text
				x=115
				y=20 >
				平文ブロック3
			</text>
			<text
				x=28
				y=88 >
				暗号ブロック1
			</text>
			<text
				x=72
				y=88 >
				暗号ブロック2
			</text>
			<text
				x=115
				y=88 >
				暗号ブロック3
			</text>
			<text
				class="xor_txt"
				x=38
				y=42 >
				xor
			</text>
			<text
				class="xor_txt"
				x=80
				y=42 >
				xor
			</text>
			<text
				class="xor_txt"
				x=123
				y=42 >
				xor
			</text>
		</svg>
	</div>
	<div class = "explanation">
		CFB</span>とは、、、<br><br>「Cipher Feedback」の略で、最初にIVを暗号化して最初の平文ブロックとの排他的論理和演算(XOR演算)によって最初の暗号をブロックを生成します。<br>以降はひとつ前に生成された暗号ブロックを暗号化してその結果と次の平文ブロックを排他的論理和演算をして暗号化する流れを繰り返します。<br>
		<svg
			id="cfb_svg"
			class="cript_mode"
			viewBox="0 0 158.75 105.83334"
			version="1.1"
			xmlns:xlink="http://www.w3.org/1999/xlink"
			xmlns="http://www.w3.org/2000/svg"
			xmlns:svg="http://www.w3.org/2000/svg">
			<rect
				class="b"
				width="35.075695"
				height="11.172259"
				x="24.590965"
				y="12.784996" />
			<rect
				class="b"
				width="35.075695"
				height="11.172259"
				x="67.006584"
				y="12.784996" />
			<rect
				class="b"
				width="35.075695"
				height="11.172259"
				x="109.4222"
				y="12.784996" />
			<rect
				class="a"
				width="35.075695"
				height="11.172259"
				x="24.590965"
				y="80.674103" />
			<rect
				class="a"
				width="35.075695"
				height="11.172259"
				x="67.006584"
				y="80.674103" />
			<rect
				class="a"
				width="35.075695"
				height="11.172259"
				x="109.4222"
				y="80.674103" />
			<path
				class="arw"
				d="m 127.65957,-65.299683 83.97902,145.455944 83.97903,145.455939 -167.95805,-1e-5 -167.958056,0 83.979035,-145.455928 z"
				transform="matrix(0.01475354,0,0,-0.17721891,41.116772,67.458301)" />
			<path
				class="arw"
				transform="matrix(0.01475354,0,0,-0.17721891,84.116982,66.948663)"
				d="m 127.65957,-65.299683 83.97902,145.455944 83.97903,145.455939 -167.95805,-1e-5 -167.958056,0 83.979035,-145.455928 z" />
			<path
				class="arw"
				transform="matrix(0.01475354,0,0,-0.17721891,125.94799,66.68884)"
				d="m 127.65957,-65.299683 83.97902,145.455944 83.97903,145.455939 -167.95805,-1e-5 -167.958056,0 83.979035,-145.455928 z" />
			<ellipse
				class="xor"
				cx="42.623146"
				cy="41.428963"
				rx="14.146476"
				ry="5.7871947" />
			<ellipse
				class="xor"
				cx="84.786995"
				cy="41.153385"
				rx="14.146476"
				ry="5.7871947" />
			<ellipse
				class="xor"
				cx="126.95084"
				cy="40.969666"
				rx="14.146476"
				ry="5.7871947" />
			<rect
				class="iv"
				width="18.188326"
				height="11.574389"
				x="1.2860433"
				y="35.45805" />
			<path
				d="m -12.125296,66.382883 -34.397931,0 -34.397933,0 L -63.722194,36.5934 -46.523228,6.8039169 -29.324262,36.5934 Z"
				transform="matrix(0,0.05094205,-0.17515759,0,32.828678,43.523373)"
				class="arrow" />
			<path
				transform="matrix(0.04426926,0.02520567,-0.31095323,0.54613371,74.863404,44.108759)"
				class="arrow"
				d="m -12.125296,66.382883 -34.397931,0 -34.397933,0 L -63.722194,36.5934 -46.523228,6.8039169 -29.324262,36.5934 Z" />
			<path
				transform="matrix(0.04426926,0.02520567,-0.31095323,0.54613371,119.10415,43.770368)"
				class="arrow"
				d="m -12.125296,66.382883 -34.397931,0 -34.397933,0 L -63.722194,36.5934 -46.523228,6.8039169 -29.324262,36.5934 Z" />
			<path
				d="m 30.663322,34.123292 c 5.023605,3.725023 2.464686,8.157958 -3.583945,6.528159 l -1.823111,2.936381 3.064332,1.609764 -0.562104,0.885852 -3.064331,-1.609757 -1.405262,2.214644 2.981513,1.566251 -0.515261,0.812038 -3.877657,-2.073233 4.296092,-6.810464 c -4.079094,-3.978229 -1.233481,-7.980088 4.489734,-6.059635 z"
				class="key" />
			<path
				d="m 64.678374,55.980171 c 5.02507,3.724138 2.4654,8.156011 -3.585,6.526596 l -1.82364,2.935679 3.06523,1.609377 -0.56227,0.885646 -3.06523,-1.609377 -1.40567,2.214113 2.98238,1.565883 -0.51541,0.811844 -3.878789,-2.072744 4.297349,-6.808833 c -4.08029,-3.97727 -1.23384,-7.978179 4.49105,-6.058184 z"
				class="key" />
			<path
				d="m 108.97635,55.258863 c 5.02525,3.71166 2.4655,8.128685 -3.58511,6.504729 l -1.8237,2.925843 3.06533,1.603986 -0.56229,0.88268 -3.06533,-1.603986 -1.40573,2.206695 2.98249,1.560637 -0.51543,0.809124 -3.87892,-2.065792 4.2975,-6.786029 c -4.08043,-3.963946 -1.23388,-7.951449 4.49119,-6.037887 z"
				class="key" />
			<text
				class="iv_txt"
				x=8
				y=42 >
				IV
			</text>
			<text
				x=28
				y=20 >
				平文ブロック1
			</text>
			<text
				x=72
				y=20 >
				平文ブロック2
			</text>
			<text
				x=115
				y=20 >
				平文ブロック3
			</text>
			<text
				x=28
				y=88 >
				暗号ブロック1
			</text>
			<text
				x=72
				y=88 >
				暗号ブロック2
			</text>
			<text
				x=115
				y=88 >
				暗号ブロック3
			</text>
			<text
				class="xor_txt"
				x=38
				y=42 >
				xor
			</text>
			<text
				class="xor_txt"
				x=80
				y=42 >
				xor
			</text>
			<text
				class="xor_txt"
				x=123
				y=42 >
				xor
			</text>
		</svg>
	</div>
	<div class = "explanation">
		OFB</span>とは、、、<br><br>「Output Feedback」の略で、最初にIVを暗号化します。次に暗号化されたIVと最初の平文ブロックを排他的論理和演算(XOR演算)して暗号ブロックを生成します。暗号されたIVを再度暗号化して、それと次の平文ブロックを排他的論理和演算(XOR演算)して二つ目の暗号ブロックを生成します。2回暗号化されたIVをさらに暗号化してその結果と次の平文ブロックを排他的論理和演算(XOR演算)して、、、<br>
		<svg
			id="ofb_svg"
			class="cript_mode"
			viewBox="0 0 158.75 105.83334"
			version="1.1"
			xmlns:xlink="http://www.w3.org/1999/xlink"
			xmlns="http://www.w3.org/2000/svg"
			xmlns:svg="http://www.w3.org/2000/svg">
			<rect
				class="b"
				width="35.075695"
				height="11.172259"
				x="24.590965"
				y="12.784996" />
			<rect
				class="b"
				width="35.075695"
				height="11.172259"
				x="67.006584"
				y="12.784996" />
			<rect
				class="b"
				width="35.075695"
				height="11.172259"
				x="109.4222"
				y="12.784996" />
			<rect
				class="a"
				width="35.075695"
				height="11.172259"
				x="24.590965"
				y="80.674103" />
			<rect
				class="a"
				width="35.075695"
				height="11.172259"
				x="67.006584"
				y="80.674103" />
			<rect
				class="a"
				width="35.075695"
				height="11.172259"
				x="109.4222"
				y="80.674103" />
			<path
				class="arw"
				d="m 127.65957,-65.299683 83.97902,145.455944 83.97903,145.455939 -167.95805,-1e-5 -167.958056,0 83.979035,-145.455928 z"
				transform="matrix(0.01475354,0,0,-0.17721891,41.116772,67.458301)" />
			<path
				class="arw"
				transform="matrix(0.01475354,0,0,-0.17721891,84.116982,66.948663)"
				d="m 127.65957,-65.299683 83.97902,145.455944 83.97903,145.455939 -167.95805,-1e-5 -167.958056,0 83.979035,-145.455928 z" />
			<path
				class="arw"
				transform="matrix(0.01475354,0,0,-0.17721891,125.94799,66.68884)"
				d="m 127.65957,-65.299683 83.97902,145.455944 83.97903,145.455939 -167.95805,-1e-5 -167.958056,0 83.979035,-145.455928 z" />
			<ellipse
				class="xor"
				cx="42.623146"
				cy="41.428963"
				rx="14.146476"
				ry="5.7871947" />
			<ellipse
				class="xor"
				cx="84.786995"
				cy="41.153385"
				rx="14.146476"
				ry="5.7871947" />
			<ellipse
				class="xor"
				cx="126.95084"
				cy="40.969666"
				rx="14.146476"
				ry="5.7871947" />
			<rect
				class="iv"
				width="18.188326"
				height="11.574389"
				x="2.2735033"
				y="23.411039" />
			<path
				d="m 9.5130658,38.477601 1.5975942,-0.7199 1.597593,-0.7199 2.16636,6.940193 2.166361,6.940192 -3.763954,-6.220292 z"
				class="arrow" />
			<path
				class="arrow"
				d="m 25.094838,53.432412 -1.172497,-1.302202 -1.172499,-1.302203 5.635639,-3.775673 5.635637,-3.775674 -4.463156,5.077892 z" />
			<path
				class="arrow"
				d="m 70.706012,54.458278 -1.221243,-1.256601 -1.221243,-1.256603 5.48775,-3.987571 5.487748,-3.987574 -4.266522,5.244191 z" />
			<path
				class="arrow"
				d="m 111.99382,54.814664 -1.22125,-1.256601 -1.22124,-1.256603 5.48775,-3.987571 5.48775,-3.987574 -4.26652,5.244191 z" />
			<path
				class="arrow"
				d="m 26.049082,60.837616 0.0094,-1.752267 0.0094,-1.752267 15.983778,0.993557 15.983777,0.993555 -15.993164,0.758711 z" />
			<path
				class="arrow"
				d="m 72.712357,62.184816 0.0078,-1.752267 0.0078,-1.752267 13.287602,0.993557 13.287603,0.993555 -13.295407,0.758711 z" />
			<path
				class="arrow"
				d="m 114.67941,62.184816 0.008,-1.752267 0.008,-1.752267 13.68234,0.993557 13.68235,0.993555 -13.69039,0.758711 z" />
			<path
				d="m 21.861128,52.901673 c 5.023605,3.725023 2.464686,8.157958 -3.583945,6.528159 l -1.823111,2.936381 3.064332,1.609764 -0.562104,0.885852 -3.064331,-1.609757 -1.405262,2.214644 2.981513,1.566251 -0.515261,0.812038 -3.877656,-2.073233 4.296091,-6.810464 c -4.079093,-3.978229 -1.233481,-7.980088 4.489734,-6.059635 z"
				class="key" />
			<path
				d="m 67.640754,53.017791 c 5.02507,3.724138 2.4654,8.156011 -3.585,6.526596 l -1.82364,2.935679 3.06523,1.609377 -0.56227,0.885646 -3.06523,-1.609377 -1.40567,2.214113 2.98238,1.565883 -0.51541,0.811844 -3.878789,-2.072744 4.297349,-6.808833 c -4.08029,-3.97727 -1.23384,-7.978179 4.49105,-6.058184 z"
				class="key" />
			<path
				d="m 108.53199,54.123284 c 5.02525,3.71166 2.4655,8.128685 -3.58511,6.504729 l -1.8237,2.925843 3.06533,1.603986 -0.56229,0.88268 -3.06533,-1.603986 -1.40573,2.206695 2.98249,1.560637 -0.51543,0.809124 -3.878917,-2.065792 4.297497,-6.786029 c -4.080427,-3.963946 -1.23388,-7.951449 4.49119,-6.037887 z"
				class="key" />
			<text
				class="iv_txt"
				x=8
				y=30.5 >
				IV
			</text>
			<text
				x=28
				y=20 >
				平文ブロック1
			</text>
			<text
				x=72
				y=20 >
				平文ブロック2
			</text>
			<text
				x=115
				y=20 >
				平文ブロック3
			</text>
			<text
				x=28
				y=88 >
				暗号ブロック1
			</text>
			<text
				x=72
				y=88 >
				暗号ブロック2
			</text>
			<text
				x=115
				y=88 >
				暗号ブロック3
			</text>
			<text
				class="xor_txt"
				x=38
				y=42 >
				xor
			</text>
			<text
				class="xor_txt"
				x=80
				y=42 >
				xor
			</text>
			<text
				class="xor_txt"
				x=123
				y=42 >
				xor
			</text>
		</svg>
	</div>
	<span id = "href_pkey"></span>
	<h2>公開鍵暗号方式</h2>
	<p>別名、「非対称鍵暗号方式」です。暗号と復号に異なる鍵(アルゴリズム)を用いる暗号化手法です。</p>
	<svg
		viewBox="0 0 158.75 105.83334"
		version="1.1"
		xmlns="http://www.w3.org/2000/svg"
		xmlns:svg="http://www.w3.org/2000/svg">
		<ellipse
			cx="26.102137"
			cy="33.774052"
			rx="16.049288"
			ry="14.726543"
			class="e_node_face" />
		<circle
			cx="30.220909"
			cy="30.032007"
			r="3.3509502"
			class="white" />
		<circle
			cx="21.953112"
			cy="29.896597"
			r="3.3509502"
			class="white" />
		<path
			d="M 15.255641,34.761787 26.058046,45.564192 36.904543,34.717696 26.100513,40.955404 Z"
			class="white" />
		<ellipse
			cx="126.45538"
			cy="33.920971"
			rx="16.049288"
			ry="14.726543"
			class="d_node_face" />
		<circle
			cx="130.57416"
			cy="30.178928"
			r="3.3509502"
			class="white" />
		<circle
			cx="122.30635"
			cy="30.043518"
			r="3.3509502"
			class="white" />
		<path
			d="m 115.60889,34.908706 10.80241,10.802405 10.84649,-10.846496 -10.80403,6.237708 z"
			class="white" />
		<path
			d="m 26.097305,59.451373 c 8.811991,1.423771 9.114876,8.997702 0.666064,11.026722 l 0.04785,5.105189 h 4.873778 v 1.548486 h -4.873776 v 3.871217 h 4.742052 l 2e-6,1.419445 -6.194771,-0.04748 -0.03025,-11.88728 c -7.876964,-2.406201 -7.511581,-9.61244 0.769051,-11.036296 z"
			class="key" />
		<path
			d="m 128.68746,71.125241 0.0478,5.105189 h 4.87378 v 1.548486 h -4.87378 v 3.871216 h 4.74205 l 1e-5,1.41945 -6.19478,-0.0475 -0.0302,-11.887284 -5.76636,-0.147799 -0.10659,-6.663061 13.72401,-0.02546 0.0249,6.906533 -6.44083,-0.07981 z"
			class="key" />
		<path
			d="M 40.156445,71.412563 77.693994,63.227691 114.98212,71.70539 77.872951,79.351739 Z"
			id="Nsame_obj" />
		<text
			class="large_txt"
			x=62
			y=75 >
			異なる
		</text>
	</svg>
	<p>次に公開鍵暗号方式の利点と欠点について学びましょう♪</p>
	<div class = "scroll_x">
		<table border = "1">
			<tr>
				<th>利点</th>
				<td>
					<ul>
						<li>自身の秘密鍵のみを保存するだけでよいため、管理が簡単。</li>
						<li>相手に鍵を送る必要がない。</li>
					</ul>
				</td>
			</tr>
			<tr>
				<th>欠点</th>
				<td>
					<ul>
						<li>ロジックが複雑であるため、システムへの組み入れが困難である。</li>
					</ul>	
				</td>
			</tr>
		</table>
	</div>
	<p><span class = "underline">受信者の暗号用の鍵は公開鍵として公開して、受信者の復号用の鍵は秘密鍵として秘密に保存します。</span><br><br>受信側は予め自分にデータを送信する人(不特定)のために暗号鍵を公開しといて、送信する側はその受信者の暗号鍵を用いて暗号化して送信します。<br>受信者はデータを受け取ったら秘密に保持されている復号鍵を用いてデータを復号します。<br><br>代表的な公開鍵暗号方式には「RSA」や「楕円曲線暗号」があります。<br>以下で詳細に説明しますね♪</p>
	<div class = "scroll_x">
		<table border = "1">
			<caption>公開鍵暗号方式の種類</caption>
			<tbody>
				<tr>
					<th>RSA</th>
					<td>桁の大きな合成数の素因数分解が困難であるという数学的な性質を安全の背景とした暗号化技術です。<br><br>例えば、「1121893841」という数字は2つの素数の積です。<br>(p × q = 1121893841)を満たす整数pとqを求めてみてみましょう♪<br><br>無理ですね笑<br>答えは「21193」「52937」ですが、これの桁数を150桁近くにするとコンピュータを用いても計算できません。</td>
				</tr>
				<tr>
					<th>楕円曲線暗号</th>
					<td>楕円曲線上の離散対数問題の難しさを安全性の根拠とした暗号化技術です。</td>
				</tr>
			</tbody>
		</table>
	</div>
	<h2>鍵の数</h2>
	<p>ここでは、共通鍵暗号方式と公開鍵暗号方式でそれぞれ必要な鍵の数を覚えましょう♪</p>
	<table border = "1" id="number_of_key_table">
		<caption>必要な鍵の数</caption>
		<tbody>
			<tr>
				<th>共通鍵暗号方式</th>
				<td><sub>n</sub>C<sub>2 = <span class="fraction"><span class="fraction_n">n(n - 1)</span><span class="fraction_d">2</span></span></td>
			</tr>
			<tr>
				<th>公開鍵暗号方式</th>
				<td>2n</td>
			</tr>
		</tbody>
	</table>
	<svg
		id="number_of_key_svg"
		viewBox="0 0 158.75 105.83334"
		version="1.1"
		xmlns:xlink="http://www.w3.org/1999/xlink"
		xmlns="http://www.w3.org/2000/svg"
		xmlns:svg="http://www.w3.org/2000/svg">
		<polyline points="20 10 20 100 150 100" stroke="black" fill="none"/>
		<line x1=20 y1=100 x2=150 y2=20 stroke="black" fill="none"/>
		<polyline id="curve" stroke="black" fill="none"/>
		<text
			x=35
			y=20 >
			共通鍵暗号方式の鍵の数(<tspan class = "small">n</tspan>C<tspan class = "small">2</tspan>)
		</text>
		<text
			x=90
			y=62 >
			公開鍵暗号方式の鍵の数(2n)
		</text>
		<text
			x=5
			y=5 >
			80個(鍵の数)
		</text>
		<text
			x=120
			y=95 >
			100人(相手の数)
		</text>
	</svg>
	<p>n=5の時に両者は10で等しくなり、nがそれより大きいと共通鍵暗号方式の鍵の数は準階乗方式で増えていきます。</p>
	<h2>ハイブリッド暗号方式</h2>
	<p>共通鍵暗号方式と公開鍵暗号方式を組み合わせた方式(ハイブリッド/hybrid)です。<br><br>データの暗号化には共通鍵暗号方式を用います。<br>共通鍵暗号方式の欠点である鍵の安全な送信が困難という問題については、公開鍵暗号方式を用いて暗号化して送信する方法です。</p>
	<h2>DH鍵共有方式</h2>
	<p>DiffieとHellmanが開発した鍵交換・共有のためのアルゴリズムです。<br>離散対数問題の難しさを安全性の根拠としています。</p>
	<div class = "explanation">
		<span class = "underline">離散対数問題</span>とは、、、<br><br>素数pと定数gが与えられ、整数yを素数pでg<sup>x</sup>を除したときときの剰余とするとき、ｙについて整数解xを求める問題です。<br><br>「y=g<sup>x</sup> mod p」に関して、「x=>y」を求めるのは簡単だが、「y=>x」を求めるのは困難であるという問題のことを言います。
	</div>
	<span id = "href_hash"></span>
	<h2>ハッシュ関数</h2>
	<p>準暗号アルゴリズムです。<br>暗号技術では、「暗号化」と「復号」が大切だと言いましたが、ハッシュ関数は<span class = "underline">「復号が不可能」</span>な暗号技術です。<br><br>復号しなくていいの???って思う人もいるかもしれませんが、入力データが一致していることだけを確認するためには復号は不要です。<br>むしろパスワードのような「一致を確認するだけ×とても大切」な情報は復号できない方がいいんです。<br><br>パスワードを例にして説明しますね♪<br>ユーザが「pass0123」というパスワードを登録したとしますね♪<br>プログラムはこれをハッシュ化して「jGY45G%6HFFh00」にして保存します。<br>ログイン時にはユーザが入力した「pass0123」をハッシュ化して「jGY45G%6HFFh00」を生成して、登録されている「jGY45G%6HFFh00」と一致するかどうかを判断します。<br><br>ハッシュ関数は以下の3つの性質を備えている必要があります。</p>
	<div class = "scroll_x">
		<table border = "1">
			<caption>ハッシュ関数の性質</caption>
			<tbody>
				<tr>
					<th>衝突発見困難性</th>
					<td>先ほどの例では、「pass0123」から「jGY45G%6HFFh00」が生成されましたよね♪<br>ですけど、「iloveyou」をハッシュ化して「jGY45G%6HFFh00」になってしまったら、不正なログインを許してしまいます、、、<br><span class = "underline">異なる文字をハッシュ化して同じ文字列にならない性質が「衝突発見困難性」</span>です。</td>
				</tr>
				<tr>
					<th>第２現像計算困難性</th>
					<td>衝突発見困難性と似ていますが、こちらはデータとハッシュ化されたデータが既知の際の衝突発見困難性です。</td>
				</tr>
				<tr>
					<th>現像計算困難性</th>
					<td>別名、「一方向性」です。ハッシュ化されたデータを元のデータに復号できない性質です。</td>
				</tr>
			</tbody>
		</table>
	</div><br>
	<div class = "exam">
		&#9836;&#9836;&#9836; 令和3年春試験午前&#8545;問3 &#9836;&#9836;&#9836;
		<div class = "separator"></div>
		衝突発見困難性に関して、「<strong>ハッシュ値が一致する2つのメッセージの発見に要する計算量が大きいことによる、発見の困難性</strong>」と説明しています。
		<div class = "super_separator"></div>
		&#9836;&#9836;&#9836; 平成31年春試験午前&#8545;問4 &#9836;&#9836;&#9836;
		<div class = "separator"></div>
		衝突発見困難性に関して、「<strong>ハッシュ値が一致する二つのメッセージの発見に要する計算量が大きいことによる、発見の困難性のことである。</strong>」と説明しています。
		<div class = "bigger_wrapper">
			<span class = "bigger">&#x1f7cd;</span> 似た(ほとんど同じ)問題が出題されていますね♪
		</div>
	</div>
	<p>ハッシュ関数は以上3つの性質を有するため、「メッセージ認証」・「OTPの生成」・「<a href = "sc-1-1-13#href_d-sign">ディジタル署名</a>」に利用されています。<br><small>※すべて後ほど学習します。</small><br><br>次に代表的なハッシュ関数について説明しますね♪</p>
	<div class = "scroll_x">
		<table border = "1">
			<caption>ハッシュ関数</caption>
			<tbody>
				<tr>
					<th>MD4</th>
					<td>RC4(ストリーム暗号方式)の開発者であるRon Rivestが開発した関数です。<br>「128ビット」のハッシュ値を生成します。<br>「S/Keys」で利用されていましたが、アルゴリズムに幾つか欠点が報告されています。</td>
				</tr>
				<tr>
					<th>MD5</th>
					<td>Ron RivestがMD4を進化させたのがMD5です。<br>MD4同様、「128ビット」のハッシュ値を生成します。</td>
				</tr>
				<tr>
					<th>SHA-1</th>
					<td>NIST(アメリカ国立標準技術研究所)がMD4を改良して開発したハッシュ関数です。<br>「160ビット」のハッシュ値を生成します。<br>近年は危殆化が進んでいるため非推奨。</td>
				</tr>
				<tr>
					<th>SHA-2</th>
					<td>「SHA-224」「SHA-256」「SHA-384」「SHA-512」の総称です。<br>SHAの後の数字がハッシュ値のビット数を表します。<br>「SHA-224」を除いてCRIPTREC暗号リストの推奨暗号です。</td>
				</tr>
				<tr>
					<th>SHA-3</th>
					<td>NISTが2012年に開催した暗号技術大会で「Keccak」がSHA-3に選出されました。<br>「224/256/384/512ビット」ハッシュ値を生成します。</td>
				</tr>
			</tbody>
		</table>
	</div>
	<!--鍵生成，疑似乱数，乱数生成，疑似乱数生成器（PRNG），鍵管理，ストレージ暗号化，ファイル暗号化，危殆化，ゼロ知識証明，SSL/TLS 暗号設定ガイドライン-->
	<h2></h2>
</div>


<?php
include_footer();
?>