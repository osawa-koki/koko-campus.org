<?php
require_once("common.php");
include_head("データ通信と制御");
?>

<div id = "main">
	<p id = "my_comment">ここでは、データがどのようにやり取りされるか、どのように管理されるかについて学びます。<br><br>それでは、Let's jump!!</p>
	<h2>ネットワークトポロジ</h2>
	<p>トポロジ(topology)とは、「位相幾何学」の意味で、、、<br><br>「位相幾何学」ってなんですかね、、、<br><br>簡単に言えば、「位置・場所」とかに関する学問です。<br><br>ネットワークトポロジとは、ネットワークのトポロジ(位置・場所)に関する考え方で、ネットワークを形成するノード(コンピュータ)がどのように結ばれているかについてのモデルです。<br><br>具体的には以下の5種類があげられます。</p>
	<ul>
		<li>ポイントツーポイント</li>
		<li>ツリー型</li>
		<li>バス型</li>
		<li>ツリー型</li>
		<li>リング型</li>
	</ul>
	<h2>ネットワーク接続</h2>
	<p>社内ネットワークを構築する際は、通常は小さな単位のLANを相互に接続して全体のネットワークを構成します。<br><br>ここでは、LANを接続するのに用いられる機器(LAN間接続機器)を学びます。</p>
	<div class = "scroll_x">
		<table border = "1" class = "norble">
			<caption>LAN間接続機機器</caption>
			<tbody>
				<tr>
					<th>アプリケーション層<br>---<br>トランスポート層</th>
					<td>ゲートウェイ</td>
				</tr>
				<tr>
					<th>ネットワーク層</th>
					<td>ルータ(L3SW)</td>
				</tr>
				<tr>
					<th>データリンク層</th>
					<td>ブリッジ(L2SW / スイッチングハブ)</td>
				</tr>
				<tr>
					<th>リピータ</th>
					<td>リピーティングハブ</td>
				</tr>
			</tbody>
		</table>
	</div>
	<h2>スパニングツリー</h2>
	<p>ブリッジやスイッチングハブは受信したブロードキャストフレームを全てのポートに送出するため、ブロードキャストフレームが通信経路上を無限にループしてしまう可能性があります。<br><small>※無限にループすることをブロードキャストストームと言います。</small><br><br>これを防ぐためのポートの一部をブロックしてフレームの無限ループを防ぐプロトコルがスパニングツリーです。</p>
	<div class = "exam">
		&#9836;&#9836;&#9836; 令和2年秋試験午前&#8545;問20 &#9836;&#9836;&#9836;
		<div class = "separator"></div>
		「<strong>複数台のレイヤ2スイッチで構成されるネットワークが複数の経路を持つ場合に、イーサネットフレームのループの発生を防ぐためのTCP/IPネットワークインターフェース層のプロトコル。</strong>」と説明されています。
	</div>
	<h2>プロキシサーバ</h2>
	<p>プロキシ(proxy)とは「代理」の意味で、プロキシサーバとは、「クライアントからの要求を受けて、クライアントの代理として他のサーバにアクセスするサーバ」を言います。<br><br>プロキシサーバを利用する利点は主に以下の2つです。</p>
	<ul>
		<li>通信量の削減</li>
		<li>セキュリティの向上<br>(ネットワーク内部の構成を隠すことができるため)</li>
	</ul>
	また、通信の方向によって以下の2つに分類できます。
	<ul>
		<li>フォワードプロキシ(内部→外部)</li>
		<li>リバースプロキシ(外部→内部)</li>
	</ul>
	<h2>ロードバランサ</h2>
	<p>システムに対するリクエストを複数のサーバに分散させてサーバの負荷軽減を測る仕組みです。<br><br>主な目的としては、<span class = "underline">「拡張性」と「可用性」</span>の2つがあります。<br><br>また、ロードバランサを実現する仕組みとして以下の2つがあげられます。</p>
	<ul>
		<li>ラウンドロビン(均等負荷分散)</li>
		<li>リーストコネクション(最小接続)</li>
	</ul>
	<h2>伝送制御(広義)</h2>
	<p>広い意味での伝送制御とは、「送受信者の間でデータを確実に伝送するための制御機能」を言います。<br><br>具体的には、以下の4つの技術から構成されます。</p>
	<ul>
		<li>伝送制御(狭義)</li>
		<li>誤り制御</li>
		<li>データリンクの確立</li>
		<li>同期方式</li>
	</ul>
	<h2>伝送制御(狭義)</h2>
	<p>データリンク後に実際にデータを送信する流れの中での制御を指します。<br><br>主に以下の4つがあります。</p>
	<div class = "scroll_x">
		<table border = "1">
			<caption>伝送制御</caption>
			<tbody>
				<tr>
					<th>データリンク制御</th>
					<td>通信をするノード間において物理的・論理的に接続することを言います。<br><br>主に以下の3つの手順を踏みます。
						<ol>
							<li>データリンクの確立</li>
							<li>データの送信</li>
							<li>データリンクの破棄</li>
						</ol>
					</td>
				</tr>
				<tr>
					<th>ルーティング制御</th>
					<td>通信経路が複数存在する場合に、最適なデータ通信経路を決定します。</td>
				</tr>
				<tr>
					<th>フロー制御</th>
					<td>大量のデータを送信する際にデータの取りこぼしがないように、送信者が受信者の状況に合わせて送信速度を制限することを言います。</td>
				</tr>
				<tr>
					<th>輻輳制御</th>
					<td>トラフィックを制御することで輻輳(トラフィックの渋滞)を防ぐことを言います。</td>
				</tr>
			</tbody>
		</table>
	</div>
	<h2>誤り制御</h2>
	<p>データ伝送においては電気的な状態によってはビット誤りは生じる可能性があります。<br><br>この誤りを検知するため、データに誤り制御用の情報を付加しますが、この情報は以下の2種類があります。</p>
	<div class = "scroll_x">
		<table border = "1">
			<caption>誤り制御</caption>
			<tbody>
				<tr>
					<th>パリティ方式</th>
					<td>ビット列中の1の数を奇数(偶数)に揃えることで誤りを<span class = "underline">検出</span>します。<br><br>2ビットの誤りが生じると奇遇が元に戻ってしまうため、この方法では2ビット以上の誤りを検出できません。<br>(1ビットの誤りを検出)</td>
				</tr>
				<tr>
					<th>水平垂直パリティ方式</th>
					<td>パリティ方式の2次元バージョンです。<br><br>縦方向と横方向の奇遇から誤りの位置を特定できるため、パリティと違って誤りを<span class = "underline">訂正</span>できます。<br>(1ビットの誤りを訂正)</td>
				</tr>
				<tr>
					<th>ハミング符号</th>
					<td>4ビットのデータに対して3ビットの検査符号を付すことで、<span class = "underline">1ビットの誤りの訂正・2ビットの誤りの検出</span>を可能にします。</td>
				</tr>
				<tr>
					<th>CRC方式</th>
					<td>「Cycle Redunduncy Code」の略で、「巡回冗長検査」と訳されます。<br><br>ビット列を多項式とみなして生成多項式で除すことによって誤りを検出します。<br><br><span class = "underline">バースト誤り(連続する誤り)を検出</span>することができます。</td>
				</tr>
			</tbody>
		</table>
	</div>
	<h2>最適なデータリンクの確立</h2>
	<p>どのように通信相手のノードとの論理的な構築を形成するかについてです。<br><br>具体的には以下の2つの方法があります。</p>
	<ul>
		<li>コンテンション方式<br>(1対1の通信)</li>
		<li>ポーリング・セレクティング方式<br>(分岐回線)</li>
	</ul>
	<h2>同期方式の最適化</h2>
	<p>データの開始位置と終了位置を判別することをデータ通信の同期を言いますが、主な目的として「データを正しく送信する」ことがあげられます。<br><br>具体的には以下の方法があります。</p>
	<ul>
		<li>SYN同期(データの最初と最後に制御文字を付加)</li>
		<li>フラグ同期(データの最初と最後にフラグシーケンス(特殊なビット列)を入力)</li>
		<li>フレーム同期(データの先頭と最後にフラグ(特別なビット・パターン)を挿入)</li>
	</ul>
	<h2>伝送制御手順</h2>
	<p>上で説明した伝送制御技術を組み合わせて実際にデータ制御が行われますが、この手順は大きく2つに分類できます。</p>
	<ul>
		<li>ベーシック手順(SYN同期×パリティ方式)</li>
		<li>HDLC(フラグ方式×CRC方式)<br>→マルチリンク制御用</li>
	</ul>
	<p class = "explanation">
		<span class = "underline">マルチリンク</span>とは、、、<br><br>
		複数のデータリンクをまとめて扱い一本のデータリンクであるかのように使用することで、通信速度を高める技術です。
	</p>

	<h2></h2>
</div>

<?php
include_footer();
?>