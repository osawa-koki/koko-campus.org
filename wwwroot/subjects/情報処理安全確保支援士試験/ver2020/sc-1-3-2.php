<?php
require_once("common.php");
include_head("データベース設計");
?>

<div id = "main">
	<p id = "my_comment">前回はデータベースの基本について学びましたね♪<br><br>今回はデータベースの設計における考え方について学びます。<br><br>それでは、Let's fly!!</p>
	<h2>データモデル</h2>
	<p>データモデルの現在分詞形であるデータモデリングは<a href = "https://www.dama-japan.org/">DMBOK2</a>によると、「データ要件を洗い出し、分析し、取扱スコープを定めるプロセスであり、データ要件を記述し伝えるために、明確に定義されたデータモデルと呼ばれる様式が用いられる。このプロセスは反復的であり、概念、論理、物理モデルが含まれる。」と説明されます。<br><br>僕なりに説明すると、データモデルとは「<strong>どんなデータを何のためにどうやって扱うか</strong>」を表す様式です。<br>データベースはあくまでもビジネスにおけるツールであってデータベースの作成自身が目的ではないので、最初に「システム分析」や「要件定義」といった過程が必要です。<br><br>データモデルは具体的には以下の3つから構成されます。</p>
	<ul>
		<li>概念設計</li>
		<li>論理設計</li>
		<li>物理設計</li>
	</ul>
	<p>以下で詳しく説明しますね♪</p>
	<h2>DBの設計手順</h2>
		<h3>概念設計</h3>
		<p>「<strong>何を(どこからどこまで)</strong>」データベース化するのかを決定します。<br><br>データは<span class = "underline">実体(エンティティ)</span>ごとにまとめられ、実体間の関連を表すために「UML」「E-R図」「バックマン線図」を用いて関係・多重度(カーディナリティ)を明確にします。</p>
		<h3>論理設計</h3>
		<p>概念モデルを基に、設計内容を詳細化・論理化して表します。<br><br>ここの段階では、以下の事項に関して設計を行います。</p>
		<ul>
			<li>データの正規化</li>
			<li>主キー・外部キーの設定</li>
			<li>一貫性制約(一意性制約・参照制約・検査制約)</li>
		</ul>
		<div class = "explanation">
			<span class = "underline">データの正規化</span>とは、、、<br><br>
			重複しているデータを排除して関連の強いデータのみを1つの表にまとめることで、表の独立性を高めることを言います。<br><br>正規化の目的は以下の2つです。
			<ul>
				<li>冗長性の排除</li>
				<li>整合性の維持</li>
			</ul>
			<p>正規化はそのれべるによって「1～3」に分類されます。</p>
			<div class = "scroll_x">
				<table border = "1">
					<caption>正規化</caption>
					<tbody>
						<tr>
							<th>第一正規化</th>
							<td>繰り返し属性を削除します。</td>
						</tr>
						<tr>
							<th>第二正規化</th>
							<td>部分従属部分を独立させるように表を分割します。<br><small>※この段階で部分関数従属がなくなります。</small></td>
						</tr>
						<tr>
							<th>第三正規化</th>
							<td>連鎖的な従属関係を削除します。<br><small>※この段階で推移的関数従属がなくなります。</small></td>
						</tr>
					</tbody>
				</table>
				<span class = "quote">※処理の高速化のためにあえて正規化を行わない選択もあります。</span>
			</div>
		</div>
		<div class = "explanation">
			<span class = "underline">主キー</span>とは、、、<br><br>
			<strong>候補キー</strong>(行を一意に特定するための列の集まりのうち、必要最小限の列の組み合わせ)のうち、最も適当な(意味的に最適な)ものを言います。<br><br>主キーは以下の主キー制約を満たす必要があります。
			<ul>
				<li>一意性制約(only one / 主キーは重複しない)</li>
				<li>非ナル制約(nullではない)</li>
			</ul>
			<p>主キーとは簡単に説明すると、「<strong>ひとつだけ、存在する</strong>」制約です。</p>
		</div>
		<div class = "explanation">
			<span class = "underline">外部キー</span>とは、、、<br><br>
			他の表を参照するための列のことを言います。<br><br>外部キーは以下の外部キー制約を満たす必要があります。
			<ul>
				<li>参照制約(参照先がnullでない)</li>
			</ul>
			<div class = "exam">
				&#9836;&#9836;&#9836; 平成31年春試験午前&#8545;問21 &#9836;&#9836;&#9836;
				<div class = "separator"></div>
				<ul>
					<li>在庫 (<span class = "nodashed">在庫管理番号</span>, <span class = "real_dashed">製造番号</span>, 在庫表)</li>
					<li>製造 (<span class = "nodashed">製造番号</span>, 製造名, 型, 単価)</li>
				</ul>
				<small>※「下線」は主キー、「破線」は外部キー</small><br><br>
				上の表において "在庫" 表の製造番号に参照制約が定義されているとき、その参照制約によって拒否される可能性がある操作として、「"在庫" 表への行追加」を挙げています。
			</div>
		</div>
		<div class = "explanation">
			<span class = "underline">一貫性制約</span>とは、、、<br><br>
			テーブルにデータを追加・更新する際に課すことができる制約でデータの整合性を維持することを目的とするため、「整合性制約」とも呼ばれます。<br><br>以下の3つからなります。
			<ul>
				<li>一意性制約</li>
				<li>参照制約</li>
				<li>検査制約</li>
			</ul>
			<small>※検査制約とはデータを追加・更新する際に課すことができる制約で、例えば「価格は0円以上」「電話番号は11桁」といった制約です。</small>
		</div>
		<h3>物理設計</h3>
		<p>ここでの主な目的は「アクセス効率」「記憶効率」の観点からデータベースの最適化を図ることです。<br><br>近年では処理速度を高めるために従来のストレージに格納するオンディスクデータベースではなくて、メモリ上に格納するインメモリデータベースの利用も進んでいます。</p>


	<h2></h2>
</div>

<?php
include_footer();
?>