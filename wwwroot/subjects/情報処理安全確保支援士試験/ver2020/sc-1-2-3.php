<?php
require_once("common.php");
include_head("ファイアウォール");
?>

<div id = "main">
	<p id = "my_comment">セキュリティ対策といえばファイアウォール!!!<br><small>僕が小学生の時は、炎の壁って感じで中身はよくわかりませんでしたけど、なんだか大好きでした♪</small><br><br>今回はファイアウォールの仕組み・適切な実装方法について学びましょう♪<br>以下では、ファイアウォールを省略してFWと表記します。<br><br>それでは、Let's smile!!</p>

	<h2>FWの概要</h2>
	<p>FWとは、複数のネットワークセグメント間において<span class = "underline">ACL(管理者が設定したルール)</span>に基づいてパケットの中継可否を判断・実行する機能を言います。</p>
	<div class = "explanation">
		<span class = "underline">ACL</span>とは、、、<br><br>「Access Control List」の略で、中継を認める(拒否する)「送信元・送信先IPアドレス」や「送信元・送信先ポート」を登録したリストを言い、アクセス制御(パケットフィルタリング)を実現するために用いられます。
	</div>
	<p>FWに似た侵入・攻撃探知機能を持つものとして以下の機能があげられます。</p>
	<div class = "scroll_x">
		<table border = "1">
			<tbody>
				<tr>
					<th>FW</th>
					<td>「IPアドレス」「ポート番号」に基づいてパケットを中継・遮断を決定します。<br>問題点として、許可されたサービスの裏(セキュリティホール)をついた攻撃は遮断できません。</td>
				</tr>
				<tr>
					<th>IDS</th>
					<td>「Intrusion Detection System」の略で「侵入<span class = "underline">検知</span>システム」と訳されます。<br>ネットワーク上で動作するNIDSとホスト上で動作するHIDSの2つに分類されます。</td>
				</tr>
				<tr>
					<th>NIDS</th>
					<td>Network上で動作するIDSです。接続されたネットワークセグメント上を流れるパケットを監視して<span class = "underline">OS・ミドルウェアのセキュリティホールを突いた攻撃を検知</span>します。<br>問題点として、暗号化されたパケットは監視できません。</td>
				</tr>
				<tr>
					<th>HIDS</th>
					<td>Host上で動作するIDSです。特定のホストに常駐してBOF攻撃・マルウェアの侵入を検知します。</td>
				</tr>
				<tr>
					<th>IPS</th>
					<td>「Intrusion Prevention System」の略で「侵入<span class = "underline">防御</span>システム」と訳されます。<br>IDSを進化させて「検知」だけでなくて「防御」も可能にした機能です。<br>ネットワーク上で動作するNIPSとホスト上で動作するHIPSの2つに分類されます。</td>
				</tr>
				<tr>
					<th>NIPS</th>
					<td>Network上で動作するIPSです。<br><span class = "underline">インライン接続</span>体制をとることで、NIDSよりも強力な侵入検知・防御機能を実現します。</td>
				</tr>
				<tr>
					<th>NIPS</th>
					<td>host上で動作するIPSです。<br>特定のホストに常駐してBOF攻撃・マルウェアの侵入を検知・防御します。</td>
				</tr>
				<tr>
					<th>WAF</th>
					<td>webアプリケーション用のFWのことで、「XSS」「SQLインジェクション」などのwebアプリケーションに対する攻撃を検知・防御します。<br>以下の機能を備えているWAFの利用が進んでいます。
						<ul>
							<li>SSLアクセラレータ機能<br>→暗号化通信を復元して攻撃を検知。防御することができる。</li>
							<li>負荷分散機能</li>
						</ul>
					</td>
				</tr>
				<tr>
					<th>サンドボックス</th>
					<td>実環境から隔離されたサンドボックス(セキュアな仮想環境)で不審なファイルやurlリンクにアクセスして、その結果を観察することで攻撃を検知・遮断します。</td>
				</tr>
			</tbody>
		</table>
	</div>
	<p>近年は、IPS(侵入防御システム)やWAF(webアプリケーションFW)も含んだ広い意味で「FW」という用語が用いられるようになっていますが、ここでは狭義(ACLに基づいてパケットフィルタリングを行う機能のみ)をFWと呼びます。</p>
	<p>FWの構成として以下の形式があげられます。<br>試験では必ずこういったネットワーク構成を利用した問題が出てくるので、なんとなく「こんな構成があるんだなぁ」と覚えといてくださいね♪</p>
	<div class = "explanation">
		<span class = "underline">公開サーバを内部セグメントに接続</span><br><br>
		<svg
			width="600"
			height="400"
			viewBox="0 0 159 106"
			version="1.1"
			class="fw_svg"
			xmlns="http://www.w3.org/2000/svg"
			xmlns:svg="http://www.w3.org/2000/svg">
			<filter
			id="internet"
			x="-0.0874"
			y="-0.142"
			width="1.17"
			height="1.28">
				<feGaussianBlur
				stdDeviation="1.42" />
			</filter>
			<polyline
			points="30,20 77,27.5 77,80" />
			<ellipse
			cx="30.7"
			cy="20.5"
			rx="19.5"
			ry="12"
			class="i" />
			<ellipse
			cx="80.5"
			cy="88.7"
			rx="61.5"
			ry="12.5"
			class="m" />
			<rect
			width="17.2"
			height="21.4"
			x="68.6"
			y="43.7"
			rx="1.76"
			class="w" />
			<path
			d="m 75.8,61.8 -2.9,-1.8 -1,-3.2 0.2,-3.3 1.1,-1.6 0.2,3.4 0.5,0.9 0.8,-4.3 -0.3,-1.6 1.1,1.3 0.6,2.9 -0.2,1.6 0.7,1.2 0.1,-4 -1.1,-4 -1.3,-1.7 1.8,0.8 0.6,-0.1 0.1,-1.3 -0.8,-1 1.6,0.7 1.3,2.9 -0.1,2 0.3,0.9 0.5,-1.7 v 2.5 l -0.4,1.5 2.3,-3.2 -0.4,-3.5 -0.8,-1.4 3.2,4.2 -0.3,2.5 -1.3,7.1 -4.1,1.6 z"
			class="f" />
			<path
			d="m 40.8,72 -5.2,1.1 -4.3,-33.2 z"
			class="ok" />
			<path
			d="m 42.3,40.2 5.2,-1.2 5.1,33 z"
			class="ok" />
			<text
			x="7"
			y="20" >インターネット
			</text>
			<text
			x="60"
			y="90" >内部セグメント
			</text>
		</svg><br>
		以下の特徴があります。
		<ul>
			<li>インターネットから内部へのアクセスは公開サーバに対するものを除いて全て遮断</li>
			<li>FWによって公開サーバへのアクセスを最小限に設定</li>
			<li>一度侵入を許すとそこから他のホストにまで影響が及ぶ可能性大</li>
			<li>C&Cサーバによる不正通信に対して脆弱</li>
		</ul>
	</div>
	<div class = "explanation">
		<span class = "underline">公開サーバをバリアセグメントに接続</span><br><br>
		<svg
			viewBox="0 0 159 106"
			version="1.1"
			class="fw_svg"
			xmlns="http://www.w3.org/2000/svg"
			xmlns:svg="http://www.w3.org/2000/svg">
			<polyline
			points="30,20 125,35" />
			<polyline
			points="77,27.5 77,80" />
			<ellipse
			cx="30.7"
			cy="20.5"
			rx="19.5"
			ry="12"
			class="i" />
			<ellipse
			cx="125"
			cy="34.9"
			rx="21.9"
			ry="9.73"
			class="p" />
			<ellipse
			cx="80.5"
			cy="88.7"
			rx="61.5"
			ry="12.5"
			class="m" />
			<rect
			width="17.2"
			height="21.4"
			x="68.6"
			y="43.7"
			rx="1.76"
			class="w" />
			<path
			d="m 75.8,61.8 -2.9,-1.8 -1,-3.2 0.2,-3.3 1.1,-1.6 0.2,3.4 0.5,0.9 0.8,-4.3 -0.3,-1.6 1.1,1.3 0.6,2.9 -0.2,1.6 0.7,1.2 0.1,-4 -1.1,-4 -1.3,-1.7 1.8,0.8 0.6,-0.1 0.1,-1.3 -0.8,-1 1.6,0.7 1.3,2.9 -0.1,2 0.3,0.9 0.5,-1.7 v 2.5 l -0.4,1.5 2.3,-3.2 -0.4,-3.5 -0.8,-1.4 3.2,4.2 -0.3,2.5 -1.3,7.1 -4.1,1.6 z"
			class="f" />
			<path
			d="m 62.4,23.9 0.9,-5.2 32.3,7.8 z"
			class="ok" />
			<path
			d="m 93.3,38 1.1,-5.1 -32.8,-5.1 z"
			class="ok" />
			<path
			d="m 105,45.8 6,2.4 -15.1,26.4 z"
			class="ok" />
			<path
			d="m 113,76.3 -6,-2.6 15,-25.7 z"
			class="ok" />
			<path
			d="m 40.8,72 -5.2,1.1 -4.3,-33.2 z"
			class="ok" />
			<path
			d="m 42.3,40.2 5.2,-1.2 5.1,33 z"
			class="ng" />
			<text
			x="7"
			y="20" >インターネット
			</text>
			<text
			x="100"
			y="38" >バリアセグメント
			</text>
			<text
			x="60"
			y="90" >内部セグメント
			</text>
		</svg><br>
		以下の特徴があります。
		<ul>
			<li>FWから内部へのアクセスは全て遮断</li>
			<li>バリアセグメントから内部セグメントへの通信は一部許可</li>
			<li>FWはバリアセグメントに対する攻撃は遮断不可</li>
			<li>C&Cサーバによる不正通信に対して脆弱</li>
		</ul>
	</div>
	<div class = "explanation">
		<span class = "underline">1つのFWで3つのセグメントを接続</span><br><br>
		<svg
			viewBox="0 0 159 106"
			version="1.1"
			class="fw_svg"
			xmlns="http://www.w3.org/2000/svg"
			xmlns:svg="http://www.w3.org/2000/svg">
			<polyline
			points="30,20 80,20 80,90" />
			<polyline
			points="80,48 123,48" />
			<ellipse
				cx="30.7"
				cy="20.5"
				rx="19.5"
				ry="12"
				class="i" />
			<ellipse
				cx="123"
				cy="47.3"
				rx="21.9"
				ry="8.4"
				class="p" />
			<ellipse
				cx="80.5"
				cy="88.7"
				rx="61.5"
				ry="12.5"
				class="m" />
			<rect
				width="15.4"
				height="18.1"
				x="71.1"
				y="39.1"
				rx="1.58"
				class="w" />
			<path
				d="m 77.6,54.4 -2.6,-1.5 -1,-2.8 0.3,-2.8 1,-1.2 0.1,2.7 0.5,0.8 0.7,-3.5 -0.2,-1.4 0.9,1 0.5,2.6 -0.1,1.2 0.6,1.1 v -3.4 l -1,-3.3 -1.1,-1.6 1.6,0.7 0.5,-0.1 0.1,-1 -0.7,-0.8 1.5,0.5 1.1,2.5 v 1.6 l 0.2,0.8 0.5,-1.4 v 2.1 l -0.4,1.3 2.1,-2.8 -0.3,-2.9 -0.8,-1.2 2.8,3.5 -0.2,2.2 -1.2,5.9 -3.7,1.4 z"
				class="f" />
			<path
				d="m 64.2,16.5 2.5,-3.6 c 0,0 17.7,0.8 25.5,4.5 7.8,3.7 19.8,17.1 19.8,17.1 0,0 -13.8,-10.8 -21.9,-13.9 -8.2,-3.1 -16.7,-3.2 -25.9,-4.1 z"
				class="ok" />
			<path
				d="m 116,32.1 2,-4 c 0,0 -14,-12.9 -23.1,-16.2 -9.9,-3.69 -31.5,-3.22 -31.5,-3.22 0,0 20.8,1.82 30.1,6.02 8.5,3.9 22.5,17.4 22.5,17.4 z"
				class="ok" />
			<path
				d="m 111,56.2 5,1.1 -9,19.5 z"
				class="ok" />
			<path
				d="m 103,75.2 -5.4,-1.5 9.4,-18.8 z"
				class="ok" />
			<path
				d="m 40.9,76.8 -5.3,1 -5.2,-41.1 z"
				class="ok" />
			<path
				d="m 36.9,37.1 5.3,-1.3 7.6,40.8 z"
				class="ng" />
			<text
			x="7"
			y="20" >インターネット
			</text>
			<text
			x="115"
			y="50" >DMZ
			</text>
			<text
			x="60"
			y="90" >内部セグメント
			</text>
		</svg><br>
		1つ前の「公開サーバをバリアセグメントに接続」する方法だと、インターネットからバリアセグメントに対する通信は一切遮断できません。<br>この問題を解決して、インターネットからDMZに対する通信の一部のみを許可することによってさらにセキュリティを高めた形態です。<br><br>ちなみに、DMZとは「De-Militalized Zone」の略で「非武装地帯」と訳されます。役割としては、外部セグメントと内部セグメントの緩衝的な存在となります。<br><br>以下の特徴があります。
		<ul>
			<li>FWによってDMZへのアクセスを最小限に</li>
			<li>インターネットから内部セグメントに対するアクセスは全て遮断</li>
			<li>DMZから内部セグメントに対するアクセスは最小限に</li>
			<li>DMZへの侵入を許しても、内部セグメントにまで影響が及ばない</li>
			<li>C&Cサーバによる不正通信に対して脆弱</li>
		</ul>
	</div>
	<div class = "explanation">
		<span class = "underline">2つのFWの間にDMZを接続</span><br><br>
		<svg
			viewBox="0 0 159 106"
			version="1.1"
		    class="fw_svg"
			xmlns="http://www.w3.org/2000/svg"
			xmlns:svg="http://www.w3.org/2000/svg">
			<polyline
			points="30,20 77,20 77,80" />
			<polyline
			points="77,47 123,47" />
			<ellipse
				cx="30.7"
				cy="20.5"
				rx="19.5"
				ry="12"
				class="i" />
			<ellipse
				cx="123"
				cy="47.3"
				rx="21.9"
				ry="8.4"
				class="p" />
			<ellipse
				cx="80.5"
				cy="88.7"
				rx="61.5"
				ry="12.5"
				class="m" />
			<rect
				width="15.4"
				height="18.1"
				x="69.6"
				y="25.2"
				rx="1.58"
				class="w" />
			<path
				d="m 76.1,40.5 -2.6,-1.5 -1,-2.8 0.3,-2.8 1,-1.2 0.1,2.7 0.5,0.8 0.7,-3.5 -0.2,-1.4 0.9,1 0.5,2.6 -0.1,1.2 0.6,1.1 v -3.4 l -1,-3.3 -1.1,-1.6 1.6,0.7 0.5,-0.1 0.1,-1 -0.7,-0.8 1.5,0.5 1.1,2.5 v 1.6 l 0.2,0.8 0.5,-1.4 v 2.1 l -0.4,1.3 2.1,-2.8 -0.3,-2.9 -0.8,-1.2 2.8,3.5 -0.2,2.2 -1.2,5.9 -3.7,1.4 z"
				class="f" />
			<rect
				width="15.4"
				height="18.1"
				x="69.6"
				y="52.7"
				rx="1.58"
				class="w" />
			<path
				d="m 76.1,68 -2.6,-1.5 -1,-2.8 0.3,-2.8 1,-1.2 0.1,2.7 0.5,0.8 0.7,-3.5 -0.2,-1.4 0.9,1 0.5,2.6 -0.1,1.2 0.6,1.1 v -3.4 l -1,-3.3 -1.1,-1.6 1.6,0.7 0.5,-0.1 0.1,-1 -0.7,-0.8 1.5,0.5 1.1,2.5 v 1.6 l 0.2,0.8 0.5,-1.4 v 2.1 l -0.4,1.3 2.1,-2.8 -0.3,-2.9 -0.8,-1.2 2.8,3.5 -0.2,2.2 -1.2,5.9 -3.7,1.4 z"
				class="f" />
			<path
				d="m 64.2,16.5 2.5,-3.6 c 0,0 17.7,0.8 25.5,4.5 7.8,3.7 19.8,17.1 19.8,17.1 0,0 -13.8,-10.8 -21.9,-13.9 -8.2,-3.1 -16.7,-3.2 -25.9,-4.1 z"
				class="ok" />
			<path
				d="m 116,32.1 2,-4 c 0,0 -14,-12.9 -23.1,-16.2 -9.9,-3.69 -31.5,-3.22 -31.5,-3.22 0,0 20.8,1.82 30.1,6.02 8.5,3.9 22.5,17.4 22.5,17.4 z"
				class="ok" />
			<path
				d="m 111,56.2 5,1.1 -9,19.5 z"
				class="ok" />
			<path
				d="m 103,75.2 -5.4,-1.5 9.4,-18.8 z"
				class="ok" />
			<path
				d="m 40.9,76.8 -5.3,1 -5.2,-41.1 z"
				class="ok" />
			<path
				d="m 36.9,37.1 5.3,-1.3 7.6,40.8 z"
				class="ng" />
			<text
			x="7"
			y="20" >インターネット
			</text>
			<text
			x="115"
			y="50" >DMZ
			</text>
			<text
			x="60"
			y="90" >内部セグメント
			</text>
		</svg><br><br>
		「1つのFWで3つのセグメントを接続」とほとんど同じ機能を実現しますが、2つのFWを異なるベンダが提供するものにすることでさらにセキュリティを高めることができます。<br><br>特徴は「1つのFWで3つのセグメントを接続」とほとんど同じです。(最後の特徴を付け加えただけです。)
		<ul>
			<li>外側のFWによってDMZへの通信の一部を遮断</li>
			<li>2つのFWによってインターネットから内部セグメントに対するアクセスは全て遮断</li>
			<li>DMZから内部セグメントに対するアクセスは最小限に</li>
			<li>DMZへの侵入を許しても、内部セグメントにまで影響が及ばない</li>
			<li>C&Cサーバによる不正通信に対して脆弱</li>
			<li>2つのFWを異なる製品にすることでセキュリティを向上可能</li>
		</ul>
	</div>
	<div class = "explanation">
		<span class = "underline">セキュリティレベルに応じて異なるDMZを構成</span><br><br>
		<svg
			viewBox="0 0 159 106"
			version="1.1"
			class="fw_svg"
			xmlns="http://www.w3.org/2000/svg"
			xmlns:svg="http://www.w3.org/2000/svg">
			<polyline
			points="30,20 79,20 79,80" />
			<polyline
			points="30,53 125,53" />
			<ellipse
				cx="30.7"
				cy="20.5"
				rx="19.5"
				ry="12"
				class="i" />
			<ellipse
				cx="124"
				cy="53"
				rx="21.9"
				ry="8.4"
				class="p" />
			<ellipse
				cx="80.5"
				cy="88.7"
				rx="61.5"
				ry="12.5"
				class="m" />
			<rect
				width="15.4"
				height="18.1"
				x="71.1"
				y="44.3"
				rx="1.58"
				class="w" />
			<path
				d="m 77.6,59.7 -2.6,-1.5 -1,-2.8 0.3,-2.8 1,-1.2 0.1,2.7 0.5,0.8 0.7,-3.5 -0.2,-1.4 0.9,1 0.5,2.6 -0.1,1.2 0.6,1.1 v -3.4 l -1,-3.3 -1.1,-1.6 1.6,0.7 0.5,-0.1 0.1,-1 -0.7,-0.8 1.5,0.5 1.1,2.5 v 1.6 l 0.2,0.8 0.5,-1.4 v 2.1 l -0.4,1.3 2.1,-2.8 -0.3,-2.9 -0.8,-1.2 2.8,3.5 -0.2,2.2 -1.2,5.9 -3.7,1.4 z"
				class="f" />
			<ellipse
				cx="31.5"
				cy="53"
				rx="21.9"
				ry="8.39"
				class="p" />
			<text
			x="7"
			y="20" >インターネット
			</text>
			<text
			x="21"
			y="55" >DMZ1
			</text>
			<text
			x="114"
			y="55" >DMZ2
			</text>
			<text
			x="60"
			y="90" >内部セグメント
			</text>
		</svg><br><br>
		「2つのFWの間にDMZを接続」の仕組みをさらに改善して、セキュリティレベルの異なる他のホストにアクセスするためにさらに別のDMZを設定します。<br><br>以下の特徴があります。
		<ul>
			<li>各ホストの用途やセキュリティレベルに応じた最適なアクセス制御機能を実現</li>
			<li>負荷分散による高パフォーマンスの実現</li>
			<li>インターネットから内部セグメントに対するアクセスを全て遮断</li>
			<li>内部セグメントからインターネットに対するアクセスを全て遮断することで、C&Cサーバによる不正通信を防止</li>
		</ul>
		このFW構成と同様の機能を実現する仕組みとして、「<span class = "underline">タグVLAN(IEEE 802.1Q)</span>」があります。
	</div>
	<h2>FWのフィルタリング方式</h2>
	<p>FWのパケットのフィルタリング(中継可否の判定・実行)する際の仕組みは以下の5つがあります。</p>
	<div class = "scroll_x">
		<table border = "1">
			<tbody>
				<tr>
					<th>パケットフィルタ型</th>
					<td>正式名称、「スタティックパケットフィルタ型フィルタリング」です。<br>この方法では、パケットのヘッダ情報に含まれる<span class = "underline">「IPアドレス」「ポート番号」「パケットの方向」「プロトコル」</span>に基づいて中継可否を判断します。<br><br>以下の特徴があります。
						<ul>
							<li><span class = "underline">インターネット層</span>でパケットを<span class = "underline">中継</span><br><small>※FW自身はコネクションを確立しない。</small></li>
							<li><span class = "underline">パケットのデータ部(ペイロード)はチェックしない。</span></li>
							<li>ACLの上の行から順に参照される。<br><small>※優先度高いものから順に登録する必要がある。</small></li>
							<li>ACLには両方向のパケットについて登録する必要がある。</li>
							<li>実行効率が高い。</li>
							<li>複雑な処理には適していない。</li>
						</ul>
						<span class = "underline">ペイロード部まで検査できないため、Webサーバに対する<a href = "sc-1-1-6?to=href_bof">BOF攻撃</a>を防御できません。</span>
					</td>
				</tr>
				<tr>
					<th>アプリケーション<br class = "w" />ゲートウェイ型</th>
					<td>パケットフィルタ型と異なり、<span class = underline>パケットのデータ部(ペイロード)までチェックします。</span><br><br>具体的な実装としては、個々のアプリケーションプログラムごとに別々のプロキシを持ち、パケットのデータ部も含めてチェックします。<br>以下の特徴があります。
					<ul>
						<li>ペイロードもチェックするため、より細かい制御が可能。</li>
						<li>FW自身がクライアントとコネクションを確立した後に、目的のサーバにクライアントに代わってコネクションを確立する。</li>
						<li>ACLにはクライアントからサーバ方向のみを登録する。</li>
						<li>FW自身がコネクションを確立するため、実行効率は低い。</li>
					</ul>
					</td>
				</tr>
				<tr>
					<th>サーキットレベル<br class = "w" />ゲートウェイ型</th>
					<td>アプリケーションゲートウェイ型と同様、FW自身がクライアントとコネクションを確立します。<br>アプリケーションゲートウェイ型と異なる点は、目的サーバとコネクションを確立する際は<span class = "underline">トランスポート層で</span><span class = "underline">バーチャルサーキット(仮想的な通信路)を形成して</span>コネクションを確立します。<br>以下の特徴があります。
					<ul>
						<li>フィルタリングはトランスポート層で実行</li>
						<li><a href = "sc-1-2-2?to=href_se-protocol">SOCKS</a>がこの仕組みを採用。</li>
						<li>ペイロードまではチェックしない。</li>
						<li>クライアント側のアプリケーションプログラムがこの方式に対応している必要がある。</li>
					</ul>
					</td>
				</tr>
				<tr>
					<th>ダイナミック<br class = "w" />パケットフィルタ型</th>
					<td>最初にコネクションを確立する方向のみをACLに登録して、実際の接続要求に対応して動的にルールを生成してフィルタリング処理を行います。<br>以下の特徴があります。
					<ul>
						<li>過去の通信から中継可否を判定することで、より精度の高いフィルタリングが可能。</li>
						<li>余分なルールは作成されない(不要になったルールは破棄される)ため、ACL設定ミスが生じにくい。</li>
					</ul>
					</td>
				</tr>
				<tr>
					<th>ステートフル<br class = "w" />インスペクション型</th>
					<td>ダイナミックパケットフィルタリング型の進化バージョンで、アプリケーションごとの通信フロー情報(ステート情報/セッション情報)からレイヤを限定しないより精密なアクセス制御を実現します。</td>
				</tr>
			</tbody>
		</table>
	</div><br>
	<div class = "exam">
		&#9836;&#9836;&#9836; 令和3年春試験午前&#8545;問6 &#9836;&#9836;&#9836;<br>
		&#9836;&#9836;&#9836; 平成31年秋試験午前&#8545;問17 &#9836;&#9836;&#9836;
		<div class = "separator"></div>
		ステートフルパケットパケットインスペクション方式のFWに関して、「<strong>パケットフィルタリングを拡張した方式であり、過去に通過したパケットから通信セッションを認識し、受け付けたパケットを通信セッションの状態に照らし合わせて遮断するかを判断する</strong>」と説明されています。
		<div class = "super_separator"></div>
		&#9836;&#9836;&#9836; 令和元年秋試験午前&#8545;問5 &#9836;&#9836;&#9836;
		<div class = "separator"></div>
		ダイナミックパケットフィルタリングの特徴として、「<strong>過去に通過したリクエストパケットに対応付けられる戻りのパケットを通過させることができる。</strong>」と説明しています。
	</div>
	<h2>ACL設定における考え方</h2>
	<p>中継可否の判定においては、デフォルトで全て拒否してそこに許可するルール(ホワイトリスト)を設定する「<span class = "underline">ポジティブセキュリティモデル</span>」とデフォルトで全て許可してそこに拒否するルール(ブラックリスト)を設定する「<span class = "underline">ネガティブセキュリティモデル</span>」の2つがあります。<br><br>フォールスポジティブは想定されるパケットを網羅していない場合はそれが脆弱性となるため一般に危険であると言えます。<br><br>次回は、FWのお友達、「IDS・IPS・WAF」について学びましょう♪</p>

	<h2></h2>
</div>


<?php
include_footer();
?>