1.予めフレームワークを作成しておく(クラスの作成->4.5)
2.olとulタグ内部はaaa,bbb,ccc,dddないしは\nでliを作成できるように(配列型文字列をデシリアライズして)=>あくまでも通常タグのみ
3.tabelのborder属性の属性値「1」をjsで自動で設定(否定の場合のみ何らかのクラスを付与)
4.tableのscroll_xのラッパー処理をjsで自動化
5.クラス名は極力短く設定
6.h2による「section」divのラッパー処理は改善の余地あり(h2にhref用のidを付与してもokなように正規表現を修正)
7.h2の子divとしてh3の解放
8.separetorでちょっとした下線を引いて区切れるように
9.「explanation」divを簡単に作成できるように(例/最初の1行のについて、、、の前の部分だけコードに記載してそれをunderlineクラスで囲ってさらに「とは、、、<br><br>」を加えるなど、、、)
10.ページ内リンクの:link・:visited化->20
11.html(php)ひとつにつき、cssファイルとjsファイルをひとつ用意する必要なし
12.目次の設定(IBMのページを真似!)
13.単語にインデックスを付して一元管理(json形式がベスト???)
14.ダブル(トリプル)タップでback,nextができるように(下にそれっぽいバーを作成)
15.swipe後すぐに遷移中と分かるようなアニメーションを作成
16.重要度絞り込み機能
17.単語説明のポップアップ画面(oh-meijiを真似!)=>タッチした部分のすぐ上(下)の表示
18.シラバス通りに進めない選択
19.最初にある程度のデザインを考えてから(レスポンシブ)コーディングへ
20.ページ内リンクを容易に!->class="link xyz"=>を元と先に設定することで自動でリンクを作成(querySelector("<li>.link")とquerySelector("<h2>.link"))などで実現
21.headerの改造(necのページを真似!)
22.menuをhiddenの初期状態を最適化
23.ajaxを用いてより柔軟に!!