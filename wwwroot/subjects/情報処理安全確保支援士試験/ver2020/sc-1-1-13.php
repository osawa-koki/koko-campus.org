<?php
require_once("common.php");
include_head("認証");
?>

<div id = "main">
	<p id = "my_comment">今回は認証について学びます♪<br><br>情報セキュリティの付加的特性のひとつである、「真正性」を保証するための技術です。<br>簡単に言えばユーザを適切に特定する技術ですね。<br>一番有名な認証技術はIDとパスワードによる認証ですかね???<br>最近は指紋認証や顔認証技術も進んできていますよね♪<br>これらについて学んでいきます。<br><br>それでは、Let's shout!!</p>
	<h2>認証</h2>
	<p>認証とは英語にすると「Authentication」ないしは「Certification」になります。<br>一般に「認証」というときは「Authentication」を指します。<br><br>まずは、「Authentication」と「Certification」の違いについて学びましょう♪</p>
	<div class = "scroll_x">
		<table border = "1">
			<caption>認証</caption>
			<tbody>
				<tr>
					<th>Authentication</th>
					<td>二者間認証と言われます。<br>認証を要求する認証請求者と認証をする認証者の間で直接認証行為が行われます。<br><br>一般的な認証がこちらに該当します。</td>
				</tr>
				<tr>
					<th>Certification</th>
					<td>三者間認証と言われます。<br>認証を要求する認証請求者と認証をする認証者の間に信頼できる第三者(認証登録者)が仲介します。<br><br>ISMS認証<small>(後ほど学習します)</small>が該当します。</td>
				</tr>
			</tbody>
		</table>
	</div>
	<h2>アクセス管理</h2>
	<p>アクセス管理は認証の目的で、ユーザごとにできる操作やアクセス可能な資源を設定します。<br>アクセス管理の大前提として要求される技術が認証技術です。</p>
	<h2>認証の対象</h2>
	<p>認証というとユーザ(人)の認証を思い浮かべる人が多いと思います。<br>実際には人の認証だけではなく、物や情報も認証の対象となります。<br>簡単に説明しますね♪</p>
	<div class = "scroll_x">
		<table border = "1">
			<caption>認証の対象</caption>
			<tbody>
				<tr>
					<th>人の認証</th>
					<td>IDとパスワード、指紋、顔の特徴によってユーザを識別して登録した本人であることを確認します。</td>
				</tr>
				<tr>
					<th>物の認証</th>
					<td>システムやネットワークへのアクセスを要求している機器が本当に正当な機器であるかを確認します。<br><br>具体的な方法としてはMACアドレスによる認証・発信元電話番号による認証があります。</td>
				</tr>
				<tr>
					<th>情報の認証</th>
					<td>主にメッセージ認証のことを指します。<br>(メッセージが改竄されていないか確認)<br><br>具体的な方法としてはメッセージダイジェストやディジタル署名があります。</td>
				</tr>
			</tbody>
		</table>
	</div>
	<h2>認証の手段と特徴</h2>
	<p>これから具体的な認証方法についてたくさん学びますが、認証方法は手段と特徴から大きく3つに分類されます。<br><br>以下にまとめました♪</p>
	<div class = "scroll_x">
		<table border = "1" class = "auth_class">
			<caption>認証の手段と特徴</caption>
			<thead>
				<tr>
					<th>種類</th>
					<th>具体例</th>
					<th>利点</th>
					<th>欠点</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<th>記憶による認証</th>
					<td>
						<ul>
							<li>パスワード</li>
							<li>暗証番号</li>
						</ul>
					</td>
					<td>
						<ul>
							<li>簡単に導入が可能</li>
						</ul>
					</td>
					<td>
						<ul>
							<li>セキュリティ面で不安</li>
						</ul>
					</td>
				</tr>
				<tr>
					<th>所有による認証</th>
					<td>
						<ul>
							<li>クレジットカード</li>
							<li>ICカード</li>
							<li>ディジタル証明書</li>
							<li>印鑑証明</li>
						</ul>
					</td>
					<td>
						<ul>
							<li>便利で安全</li>
						</ul>
					</td>
					<td>
						<ul>
							<li>貸し借りが可能</li>
							<li>紛失のリスクがある</li>
							<li>複製が可能</li>
						</ul>
					</td>
				</tr>
				<tr>
					<th>生体認証</th>
					<td>
						<ul>
							<li>指紋</li>
							<li>顔</li>
							<li>声紋</li>
							<li>光彩</li>
						</ul>
					</td>
					<td>
						<ul>
							<li>誤認識が低い</li>
						</ul>
					</td>
					<td>
						<ul>
							<li>導入に費用がかかる</li>
							<li>体調変化の影響を受ける</li>
						</ul>
					</td>
				</tr>
				<tr></tr>
			</tbody>
		</table>
	</div>
	<h2>利用者認証</h2>
	<p>最初に人の認証(利用者認証)について説明しますね♪<br>以下に利用者認証で用いられる方法をまとめました。</p>
	<div class = "scroll_x">
		<table border = "1">
			<caption>利用者認証の方法</caption>
			<tbody>
				<tr>
					<th>ID&パスワード</th>
					<td>最も一般的な方法ですね。<br>簡単に導入が可能ですが、セキュリティ面で問題視されることが多いです。<br>辞書攻撃・パスワードリスト攻撃に対して脆弱です。</td>
				</tr>
				<tr>
					<th>ICカード</th>
					<td>半導体集積回路を埋め込んだカードを所有するという事実から本人を識別します。<br><br>ICカードの情報の操作されにくさを<span class = "underline">対タンパ性</span>といいます。<br><small>※タンパ(tamper)とは「許可なくいじる」の意。</small></td>
				</tr>
				<tr>
					<th>PINコード</th>
					<td>パスワードと似ていますが、PINコードはパスワードと異なり、PC・スマホといったハードウェアに関連付けられています。<br><small>※パスワードはアプリケーションに関連付けられるため、セキュリティ面で問題があります。</small></td>
				</tr>
				<tr>
					<th>多段階認証</th>
					<td>複数の認証技術を組み合わせる認証方法を言います。<br><br>ATMからお金を引き出すときは「キャッシュカード」と「暗証番号」の2つが必要ですよね。<br>これが多段階認証です。</td>
				</tr>
				<tr>
					<th>OTP</th>
					<td>ワンタイムパスワード(One Time Password)の略で、使い捨てのパスワードを利用する認証方法を言います。<br><br>具体的な方法としては後述する「<span class = "underline">チャレンジレスポンス方式</span>」があります。</td>
				</tr>
				<tr>
					<th>アイデンティティ連携</th>
					<td>別サービスの認証システムを利用することです。<br>facebookのID&パスワードを使ってInstagramにログインする技術がアイデンティティ連携です。<br><br><span class = "underline">OpenIDやSMAL</span>といった技術により実装されています。</td>
				</tr>
				<tr>
					<th>セキュリティトークン</th>
					<td>ワンタイムパスワードを表示するための機器のことを言います。<br>現在は「スマホ」がセキュリティトークンとして利用されることが多いです。<br>認証アプリ(「Google Authenticator」「Microsoft Authenticator」)を使用してワンタイムパスワードを表示します。</td>
				</tr>
				<tr>
					<th>SSO</th>
					<td>「Single Sign On」の略で、認証を必要とする複数のシステムにおいて、一度認証に成功すれば以降はその認証利用をそのまま利用できる仕組みのことを言います。<br><br>具体的な実装手法としては<span class = "underline">「エージェント型」「リバースプロキシ型」「SAML型」「アイデンティティ管理型」</span>があります。</td>
				</tr>
				<tr>
					<th>CAPCHA</th>
					<td>「Completely Automated Public Turning test to tell Computers and Humans Apart」の略で、「人間とコンピュータを識別するための完全に自動化された公開チューリングテスト」と訳されます。<br>単にユーザが人間かコンピュータかを判定するための技術で、特定の個人を特定することはできません。</td>
				</tr>
				<tr>
					<th>AAAフレームワーク</th>
					<td>3つのA(<span class = "underline">「認証/Authentication」・「認可/Authorization」・「課金/Accounting」</span>)からなるフレームワークを言います。<br><br>具体的な実装方法としては<span class = "underline">「<a href = "sc-1-1-14?to=href_radius">RADIUS</a>「<a href = "href_tacacs">TACACS/TACACS+</a>」「<a href = "href_kerberos">Kerberos</a>」</span>があります。<br><small>※後ほど学習します。</small></td>
				</tr>
				<tr>
					<th>FIDO</th>
					<td>近年開発されたパスワードを必要としない認証方法です。(パスワードレス認証)<br>利用者が保有するスマホ等のデバイスを認証器として使用します。<br><br>具体的な実装方法としては「UAF」「U2F」があります。<br><br>以下で詳しく説明します。</td>
				</tr>
			</tbody>
		</table>
	</div><br>
	<div class = "explanation">
		<span class = "underline">FIDO</span>とは、、、<br><br>
		「Fast IDentity Online」の略で、次世代オンライン認証技術です。<br><br>
		従来の「パスワード」認証におけるセキュリティ面での限界を克服したオンラインの認証技術で、主にスマホで生体認証を行うことで認証システムを実現します。<br><br>
		「<strong>パスワードレス認証</strong>」と呼ばれることが多いです。
		<div class = "scroll_x">
			<table border = "1">
				<tbody>
					<tr>
						<th>UAF</th>
						<td>「Universal Authentication Framework」の略で、スマホ等の端末を認証器として利用します。<br>利用するスマホはFIDO対応である必要あります。</td>
					</tr>
					<tr>
						<th>U2F</th>
						<td>「Universal Second Factor」の略で、UAFの進化バージョンです。<br>ブラウザからの利用を想定しているため、利用するスマホはFIDO対応である必要がありません。</td>
					</tr>
					<tr>
						<th>FIDO2</th>
						<td>ブラウザ上で生体認証を実施して、認証の結果を安全にオンラインサービスで使うための世界標準規格です。</td>
					</tr>
				</tbody>
			</table>
		</div>
	</div>
	<div class = "exam">
		&#9836;&#9836;&#9836; 令和元年秋試験午前&#8545;問1 &#9836;&#9836;&#9836;
		<div class = "separator"></div>
		FIDO UAF1.1に基づいた認証処理の例として、「<strong>SaaS接続時の認証において、PINコードとトークンが表示したワンタイムパスワードとをPCから認証サーバに接続した。</strong>」を挙げています。
	</div>
	<h2>生体認証技術</h2>
	<p>身体的な特徴を利用して個人を特定します。<br><br>生体情報は長期間にわたって変化しにくく、さらに類似する人が存在する確率はかなり低いため、個人の認証においてはかなり有効なものと認識されます。<br><br>生体認証に用いられる情報は以下の3つの性質を備える必要があります。</p>
	<div class = "scroll_x">
		<table border = "1">
			<caption>生体認証で利用する生体的特徴のが持つべき性質</caption>
			<tbody>
				<tr>
					<th>普遍性</th>
					<td>みんなが持っている特徴であること。</td>
				</tr>
				<tr>
					<th>唯一性</th>
					<td>本人に固有の特徴であること。</td>
				</tr>
				<tr>
					<th>永続性</th>
					<td>長期間にわたって変化しないこと。</td>
				</tr>
			</tbody>
		</table>
	</div>
	<p>生体認証に利用される生体的特徴は、身体的特徴(静脈パターン・虹彩・顔・網膜)や行動的特徴(声紋・署名)があります。<br><br>また、生体認証の精度は「FRR」と「FAR」で表されます。</p>
	<div class = "explanation">
		<span class = "underline">FRR</span>とは、、、<br><br>「False Rejection Rate」の略で、本人拒否率と訳されます。<br>本人であるにも関わらず、本人ではないと認識してしまう確率です。
	</div>
	<div class = "explanation">
		<span class = "underline">FAR</span>とは、、、<br><br>「False Acceptance Rate」の略で、他人受入れ率と訳されます。<br>他人であるにも関わらず、本人であると認識してしまう確率です。
	</div>
	<span id = "href_d-sign"></span>
	<h2>ディジタル署名</h2>
	<p>ハッシュ関数とPKIの技術を組み合わせて開発された「電子署名技術」です。<br><br>ディジタル署名では以下の2点を確認することが可能になります。</p>
	<ul>
		<li>送信者の確認(なりすまし防止)</li>
		<li>ネットワーク上で何者かに改竄されていないことの確認<br>(改竄検知)</li>
	</ul>
<svg
	viewBox="0 0 158.75 105.83334"
	version="1.1"
	xmlns="http://www.w3.org/2000/svg"
	xmlns:svg="http://www.w3.org/2000/svg">
  <path
		d="m 99.138315,95.634193 c 2.841875,0.472125 2.939545,2.983672 0.2148,3.6565 l 0.0155,1.692917 h 1.571795 v 0.51347 h -1.571795 v 1.28372 h 1.529315 v 0.47069 l -1.997819,-0.0157 -0.01,-3.941878 c -2.540344,-0.797901 -2.422513,-3.187522 0.248034,-3.659679 z"
		class="key" />
  <path
		d="m 122.75326,95.691924 -0.002,3.29148 -2.56648,0.0194 0.0167,1.820726 h 1.70199 v 0.53831 h -1.70199 v 1.34576 h 1.65599 v 0.49345 l -2.16329,-0.0165 -0.0105,-4.163086 -2.32444,-0.06 0.001,-3.27841 z"
		class="key" />
  <path
		d="m 140,103 -2,-3.5 2,-3.52 2,3.52 z"
		class="hash" />
  <ellipse
		cx="28.483074"
		cy="10.817913"
		rx="8.9064722"
		ry="8.1724224"
		class="e_node_face" />
  <circle
		cx="30.768766"
		cy="8.7412825"
		class="white"
		r="1.8595932" />
  <circle
		cx="26.180593"
		cy="8.6661386"
		class="white"
		r="1.8595932" />
  <path
		d="m 22.463865,11.366052 5.994742,5.99474 6.01921,-6.019209 -5.995643,3.461585 z"
		class="white" />
  <ellipse
		cx="136.08371"
		cy="11.346149"
		rx="8.3610058"
		ry="7.6719112"
		class="d_node_face" />
  <circle
		cx="138.2294"
		cy="9.3967009"
		r="1.7457045"
		class="white" />
  <circle
		cx="133.92223"
		cy="9.3261576"
		r="1.7457045"
		class="white" />
  <path
		d="m 130.43312,11.860718 5.62761,5.627599 5.65056,-5.650569 -5.62844,3.249585 z"
		class="white" />
  <path
		d="m 21.2,25.7 h 10.6 l 3.1,3.9 v 13.6 h -13.7 z"
		id="doc"
		class="doc num0" />
  <path
		d="m 36.823059,38.537231 0.737786,-1.019418 0.737785,-1.019418 5.097427,4.465864 5.097428,4.465865 -5.835214,-3.446447 z"
		id="arw0"
		class=" arw num1 d" />
  <rect
		width="13.8"
		height="7.8604388"
		x="49.402855"
		y="48.158234"
		id="box1"
		class="h num1 d" />
  <path
		d="m 48,21.4 1.7,-0.5 2,-0.4 3.5,23.4 3.3,22.7 -5.4,-22.4 z"
		id="arw1"
		class="arw num2 d" />
  <path
		d="m 47.9,64.4 3.4,-2.5 -13.5,-14.2 z"
		id="arw2"
		class="arw num3 d" />
  <path
		d="m 56.1,18.6 1.5,0.8 1.7,1.3 -11.8,15.8 -11.3,15.2 9.7,-16.6 z"
		id="arw3"
		class="arw num3 d" />
  <path
		d="m 57.8,20 1.8,0.6 1.9,0.5 -11.6,35.8 -11.6,35.1 9.6,-35.6 z"
		class="arw num3 d" />
  <rect
		width="13.813265"
		height="7.8437099"
		x="21.2"
		y="49"
		id="box2"
		class="public num3 d" />
  <path
		d="m 42.9,45.5 -0.2,-5 -0.1,-6.3 37.1,1.7 36.3,1.8 -36.5,4.4 z"
		id="arw4"
		class="arw num4 d" />
  <path
		d="m 120,46 h 4 l -2,11.7 z"
		id="arw5"
		class="arw num5 d" />
  <path
		d="m 141,46 h 4 l -2,11.7 z"
		id="arw6"
		class="arw num5 d" />
  <rect
		width="13.8"
		height="7.8604388"
		x="115"
		y="60"
		id="box3"
		class="h num1 d" />
  <path
		d="m 46.5,8.5 c 3.1,-1.48 4.9,0.98 2.8,3.5 l 1.2,1.7 1.5,-1.1 0.4,0.6 -1.6,1 0.9,1.3 1.5,-1 0.4,0.5 -2,1.3 -2.8,-3.9 c -3.1,0.9 -4.6,-1.6 -2.3,-3.9 z"
		id="s_key"
		class="key" />
  <path
		d="m 59.7,6.97 1.8,3.23 -2.4,1.4 1,1.8 1.6,-0.9 0.3,0.6 -1.6,0.9 0.8,1.3 1.5,-0.9 0.3,0.5 -2.1,1.1 -2.3,-4.1 -2.2,1.2 -1.9,-3.25 z"
		id="p_key"
		class="key" />
  <path
		d="m 70,15 -2,-3.5 2,-3.52 2,3.52 z"
		id="ico_hash"
		class="hash" />
  <path
		d="m 70,15 -2,-3.5 2,-3.52 2,3.52 z"
		id="ico_hash0"
		class="hash" />
</svg><br>
	<span id = "ds_button">次へ</span>
	<p><small><span class="cancel">※ios端末だと正常に動作しないらしいです、、、頑張ってコーディングしたのに、、、泣(2021年9月15日時点)</span><br>修正しました!!<br>原因はsafariでの正規表現の戻読みができないためでした。(2021年9月30日修正)</small></p>
	<ol>
		<li>送信者はハッシュ関数を用いて送信する文書のメッセージダイジェスト(MD)を作成します。</li>
		<li>MDを送信者の秘密鍵で暗号化してディジタル署名を作成します。</li>
		<li>文書(平文)にディジタル署名(暗号化されたMD)とディジタル証明書(送信者の公開鍵)を付して送信します。</li>
		<li>受信者は受信データから文書(平文)を取り出してハッシュ関数を用いてメッセージダイジェストを作成します。</li>
		<li>受信者は次にディジタル署名(暗号化されたMD)をディジタル証明書(送信者の公開鍵)を用いて復号します。</li>
		<li>受信者が作成したMDとディジタル署名を復号して得られたMDが同じであれば、完全性・正当性が保証されます。</li>
	</ol>
	<p>ディジタル署名の概要を説明します。<br><br>前回の授業で暗号化と復号について学びましたよね♪<br>その中の公開鍵暗号方式についてしっかり理解できましたか???<br><br>公開鍵暗号方式では、<span class = "underline">受信者の公開鍵(暗号鍵)で暗号化して、受信者の秘密鍵(復号鍵)で復号しましたね♪</span><br><br>ディジタル署名はこの逆です。<br>ディジタル署名では、<span class = "underline">送信者の秘密鍵(復号鍵)で暗号化して、送信者の公開鍵(暗号鍵)で復号します。</span><br><br>復号鍵で暗号!?暗号鍵で復号!?って思う方もいると思いますが、結果的には同じになります。<br>また、ディジタル署名の際は、送信者の秘密鍵(復号鍵)を<span class = "underline">署名鍵</span>、送信者の公開鍵(暗号鍵)を<span class = "underline">検証鍵</span>ということが多いです。<br>ディジタル署名はセキュリティ技術の中でも基盤となる技術ですので、今しっかりと覚えちゃいましょう♪</p>
	<h2>XMLディジタル署名</h2>
	<p>W3C(World Wide Web Consortium)とIETF(Internet Engineering Task Force)によって共同開発されたXML文書にディジタル署名を行う技術のことを指します。<br><br>具体的な内容としては、「Enveloped署名」「Enveloping署名」「Detached署名」の3つがあります。</p>
	<div class = "scroll_x">
		<table border = "1">
			<caption>XMLディジタル署名</caption>
			<tbody>
				<tr>
					<th>Enveloped署名</th>
					<td>署名対象のオブジェクトの内部に署名をします。</td>
				</tr>
				<tr>
					<th>Enveloping署名</th>
					<td>署名の内部に署名の対象となるオブジェクトをおきます。</td>
				</tr>
				<tr>
					<th>Detached署名</th>
					<td>署名対象であるオブジェクトと署名を分離させます。</td>
				</tr>
			</tbody>
		</table>
	</div><br>
	<div class = "exam">
		&#9836;&#9836;&#9836; 令和元年秋試験午前&#8545;問4 &#9836;&#9836;&#9836;
		<div class = "separator"></div>
		XMLディジタル署名の特徴として、「<strong>XML文書中の任意のエレメントに対してデタッチ署名を付けることができる。</strong>」と説明しています。
	</div>
	<h2>ブラインド署名</h2>
	<p>デビット・チャウムによって近年開発された署名技術です。<br>署名者にメッセージの内容を見せることなく署名をしてもらう方式です。<br>2021年9月現在、実用化は進んでいませんがこれから「電子投票」や「電子マネー」などの匿名性が要求される分野で必要性を増すと注目を浴びている技術です。<br><small>※引用元は<a href = "http://www.hit.bme.hu/~buttyan/courses/BMEVIHIM219/2009/Chaum.BlindSigForPayment.1982.PDF">こちら</a>。</small></p>
	<h2>グループ署名</h2>
	<p>あるグループに属している人の署名に関して、なされた署名が当該グループへの所属にのみ関連付けられ、個人に対して紐づけられない(誰が署名したかは特定できない)ようにする署名方式です。<br>例えば僕がとある大学生として何かに署名する際に、僕として署名するのではなくM大学に所属する一人の学生として署名する方法を言います。</p>
	<h2>トランザクション署名</h2>
	<p>送信時にトークンを用いて署名情報を作成して、ネットワーク上で情報が改竄されていないことを検証する技術のことを言います。<br><a href = "sc-1-1-7?to=href_mitb">MITB攻撃</a>への有効な対策となります。</p>
	<span id = "href_transaction"></span>
	<h2>タイムスタンプ</h2>
	<p>タイムスタンプについて説明する前にタイムスタンプが必要とされる時代背景について少し説明しますね♪<br><br>近年は、紙媒体ではなく電子媒体での文書が利用される機会が増えてきましたね♪<br>ここで、「紙媒体から電子媒体」という流れの中で、電子文書に求められる課題が鮮明になりました。</p>
	<ul>
		<li>複製防止技術</li>
		<li>文書作成日の偽造防止技術</li>
	</ul>
	<p>この課題を解決するための技術として、「ディジタル署名」がありますが、「ディジタル署名」では、作成日の偽造防止機能はありません。<br><br>という流れの中で、「タイムスタンプ」が生まれました。<br>タイムスタンプとは、簡単に言えば「文書作成日を特定するための技術」です。<br><br>タイムスタンプとは、電子媒体の文書に対して信頼できる第三者である時刻配信局(TSA)が時刻情報を付すことにより電子媒体文書の作成日を特定する技術です。<br><br>以下でタイムスタンプ取得の流れを説明しますね♪</p>
	<ol>
		<li>タイムスタンプ要求者が対象電子文書のハッシュ値を生成します。</li>
		<li>ハッシュ値を時刻認証局(TSA)に送信します。</li>
		<li>TSAは時刻配信局(TA)から正確な現在時刻を取得します。</li>
		<li>TSAは受信したハッシュ値にTAから受け取った時刻情報を付して改竄防止処置(「ディジタル署名」「リンキング」「アーカイビング」)を行いタイムスタンプを生成します。</li>
		<li>TSAはタイムスタンプをタイムスタンプ要求者に返します。</li>
	</ol>
	<p>次にTSAが改竄防止処置として行う「ディジタル署名」「リンキング」「アーカイビング」について説明しますね♪</p>
	<div class = "scroll_x">
		<table border = "1">
			<tr>
				<th>ディジタル署名</th>
				<td>CAが発行したディジタル証明書(公開鍵証明書)を用いてタイムスタンプにディジタル署名を行います。</td>
			</tr>
			<tr>
				<th>リンキング方式</th>
				<td>タイムスタンプを付与する複数の文書のハッシュ値を互いに関連付けて(linking)タイムスタンプを作成して、タイムスタンプを他の多数のタイムスタンプに依存させることでその信頼性を確保します。</td>
			</tr>
			<tr>
				<th>アーカイビング方式</th>
				<td>TSAがタイムスタンプ対象文書のハッシュ値とその登録時刻をデータベースに保存する方法です。</td>
			</tr>
		</table>
	</div>
	<h2>メッセージ認証</h2>
	<p>送信したデータ(メッセージ)がネットワーク上で不正に改竄されていないかを確認する技術のことを言います。<br>実装技術としては前回の授業で学んだ<a href = "sc-1-1-12?to=href_hash">ハッシュ関数</a>もしくは<a href = "sc-1-1-12?to=href_ckey">共通鍵暗号技術</a>を用います。<br><br>代表的な方法としては、メッセージ認証コード(MAC)を使用する方法があげられます。<br><br>以下でメッセージ認証に用いられる用語について説明しますね♪</p>
	<div class = "scroll_x">
		<table border = "1">
			<tr>
				<th>MAC</th>
				<td>メッセージ認証コード(Message Authentication Code)のことで、送信したデータがネットワーク上で改竄されていないかを確認するために使われます。<br><br>共通鍵暗号を用いる「CMAC」とハッシュ関数を用いる「HMAC」とCBC暗号モードによる暗号を用いる「CBC-MAC」の3種類があります。</td>
			</tr>
			<tr>
				<th>HMAC</th>
				<td>ハッシュ関数はそのアルゴリズムが公開されているため攻撃者がハッシュ値をデータ改竄後にハッシュ値を再計算することが可能という問題があります。<br><br>HMACではこの問題に対応するため、ハッシュ値の計算時に両者が共有している秘密鍵の値を加えることで第三者によるメッセージ改竄後のハッシュ値の再計算を防ぎます。</td>
			</tr>
			<tr>
				<th>CBC-MAC</th>
				<td>皆さん、<a href = "sc-1-1-12?to=href_mode">ブロック暗号方式の暗号モード</a>について覚えていますか???<br>「ECB」「CBC」「CFB」「OFB」の4つありましたよね♪<br>そのうちの「CBC」を利用するメッセージ認証技術です。<br>「CBC」暗号モードの特徴として前のブロックの暗号結果を利用して次のブロックを暗号する点があげられます。<br>換言すれば、平文がひとつでも変化すると結果も全く異なるものになります。<br><br>「CBC-MAC」は固定長のメッセージに関しては安全性が保証されるんですけど、可変長のメッセージについては安全ではないとされるため、以下のCMACの利用が推奨されます。</td>
			</tr>
			<tr>
				<th>CMAC</th>
				<td>ブロック暗号(共有鍵暗号技術)を用いたメッセージ認証技術で前述した「CBC-MAC」が可変長のメッセージに関しては安全でないという問題を修正したものです。</td>
			</tr>
		</table>
	</div><br>
	<div class = "exam">
		&#9836;&#9836;&#9836; 平成31年春試験午前&#8545;問8 &#9836;&#9836;&#9836;
		<div class = "separator"></div>
		MACの使用の効果として、「<strong>振込先口座番号と振込口座が改ざんされていないことを確認できる。</strong>」を挙げています。
	</div>
	<h2>フィンガプリント</h2>
	<p>ディジタル証明書・公開鍵・メールなどの電子データがネットワーク上で不正に改竄されていないことを証明するためのデータを指します。<br>実装には<a href = "sc-1-1-12?to=href_hash">ハッシュ関数</a>が用いられます。</p>
	<h2>チャレンジレスポンス認証</h2>
	<p>パスワードそのものをネットワーク上に流さないでパスワード認証を実現する技術です。<br><br>素のパスワード(seedといいます)に乱数文字列を組み合わせたものを送信することで実現します。<br><br>以下でチャレンジレスポンス認証の手順を説明しますね♪</p>
	<ol>
		<li>サーバがチャレンジ(乱数文字列)をクライアントに送信します。</li>
		<li>クライアントは素のパスワード(seed)とサーバから受けとったチャレンジをハッシュ関数にかけてレスポンスを生成してサーバに返します。</li>
		<li>サーバはクライアントから受け取ったレスポンスとクライアントが行った処理と同様の処理を行い得た文字列が同じかどうか確認します。</li>
	</ol>
	<p>チャレンジレスポンス認証を実現するプロトコル・システムを紹介しますね♪</p>
	<div class = "scroll_x">
		<table border = "1">
			<caption>チャレンジレスポンス認証を実現するプロトコル・システム</caption>
			<tbody>
				<tr>
					<th>CHAP</th>
					<td>「Challenge Handshake Authentication Protocol」の略で、PPPで用いられるOTPによる認証方法です。<br><br>従来はPPPではPAP認証が主流でしたが、セキュリティの観点からCHAPが用いられる機会が増えています。</td>
				</tr>
				<tr>
					<th>S/Key</th>
					<td><a href = "sc-1-1-12?to=href_hash">ハッシュ関数</a>の一方向性を利用したチャレンジレスポンスによるOTP認証方式です。<br>以下の手順で認証を行います。<br><br>
						<ol>
							<li>クライアントがサーバにログインを要求します。</li>
							<li>サーバは保存していたシーケンス番号から「1」を引いた値とseedをチャレンジとしてクライアントに送信します。</li>
							<li>クライアントはseedとパスワードからシーケンス番号から「1」を引いた値の数だけハッシュ演算を行いレスポンス(パスフレーズ)を算出してサーバに送信します。</li>
							<li>サーバは受信したデータに対してもう一回ハッシュ演算を行い、合計でシーケンス番号分の演算がなされた状態にして、その結果がもともと保存されていたデータと一致するかどうかをチェックします。</li>
							<li>サーバはシーケンス番号を「1」減らして保存すると同時に、クライアントから受け取ったレスポンスをOTPとして保存します。</li>
						</ol>
						<small>※シーケンス番号が「0」になるとエラーとなるためその前に新たにOTPを発行しなおす必要があります。</small>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
	<h2>リスクベース認証</h2>
	<p>ユーザの普段IPアドレス・利用デバイス・GPS情報を把握して、普段のユーザ行動と異なる認証行為が発生した場合にのみ厳格なユーザ認証を行うことでなりすましや不正ログインを防ぎます。</p>
	<h2>コードサイニング</h2>
	<p>ソフトウェアにディジタル署名を行うことでソフトウェアの配布元の認証・なりすましや内容の改竄の検知を可能にする技術を言います。</p>
	<h2></h2>
</div>


<?php
include_footer();
?>