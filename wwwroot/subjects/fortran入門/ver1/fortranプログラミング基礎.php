<?php
require(__DIR__. "/../../framework/ver3/common.php");
$obj = array(
	"made" => "2022-02-28",
	"updated" => "2022-02-28"
);
head($obj);
?>
<h2>fortranプログラムの雛形</h2>
fortranプログラムは以下のように書きます。
<code class="fortran">
	PROGRAM プログラム名
		! 処理...
		! 処理...
		! 処理...
		STOP
	END PROGRAM
</code>
<h3>PROGRAM</h3>
「PROGRAM」と「END PROGRAM」で囲まれた部分はメインプログラムであることを示します。<br />メインプログラム以外には初期値を設定する「BLOCK DATA」部分や外部副プログラム(FUNCTION(関数)/SUBROUTINE(サブルーチン))などがあります。
<p>メインプログラム以外については後ほど説明します。</p>
「END PROGRAM」の後にプログラム名を記述することもありますが、ここでは省略します。
<h3>STOP</h3>
プログラムの実行を停止します。<br />通常は直後にプログラムの終端を意味する「END PROGRAM」が続くため省略することができます。
<h2>fortranプログラムの注意点</h2>
fortranでコーディングする際には以下の点に注意してください。
<ul>
	<li>大文字と小文字を区別しない</li>
	<li>自由記述形式</li>
	<li>ソフトタブによるインデント</li>
</ul>
<h3>大文字と小文字を区別しない</h3>
fortranプログラムでは大文字と小文字を区別しません。<br />したがって、最初に紹介した「hello fortran」と出力するプログラムを以下のように書いてもok!です。
<code class="fortran">
	PrOgRaM hi
		WrItE (*,*) 'こんにちは'
		StOp
	EnD PrOgRaM
</code>
fortran90から小文字もok!となったので、ここでも他の言語に合わせて原則として小文字を使用することにします。
<h3>自由記述形式</h3>
fortran77では1行目から6行目までは行番号と行の継続識別子を書きますが、プログラム処理を書くのは7行目から72桁までという制限がありました。<br />fortran90からは行番号と行の継続識別子を使用しなくなりましたので1行目から書くことができますが、1行で使用可能な文字数は132という制限があります。
<h3>ソフトタブによるインデント</h3>
コードを見やすくするために行の先頭に空白類似文字(スペース・タブ文字)を挿入することが多いですが、これをインデントと呼びます。<br />fortranではインデントとしてソフトタブ(スペース)を使用します。<br />他の言語ではハードタブでインデントを生成する場合が多いですので注意してください。
<h2>コメントアウト</h2>
プログラムコード中に書くメモ書きをコメントアウトと呼びますが、fortranでは「!」から行末までがコメントアウトとして認識されます。
<code class="fortran">
	program hi
		! はぁ、
		! あと一カ月で学生生活も終了かぁ
		! 、、、
		write (*,*) 'hello fortran' ! 「fortan」と出力
		stop
	end program
</code>
<h2>標準入出力</h2>
プログラム内の処理は見ることができないので、プログラムでの処理の結果をコンソール画面に出力して結果を確認します。<br />同時に定められたデータに対しての処理ではつまらないため、コンソール画面でユーザが入力したデータに対して処理をしてみましょう♪
<h3>標準出力</h3>
標準出力するにはwrite文を使用します。<br />write文は以下のように書きます。
<code class="fortran">
	write (*,*) データ
</code>
writeの後の「(*,*)」は顔文字ではありません。<br />最初の「*(アスタリスク)」は出力先がコンソール画面であることを意味します。<br />コンソール画面以外には内部ファイル・外部ファイルへの出力をすることができます。
<p>ファイルへの出力方法は後ほど説明します。</p>
<br />
二つ目の「*(アスタリスク)」は書式化(どのように表示するか)でデフォルト指定しています。<br />単にデータをコンソール画面に表示するだけなら「*(アスタリスク)」でok!です。
<p>書式化については随時説明します。</p>
<code class="fortran">
	program hi
		write (*,*) "hello fortran"
		write (*,*) "hello fortran"
		write (*,*) "hello fortran"
		stop
	end program

	! ***** コンソール *****
	! hello fortran
	! hello fortran
	! hello fortran
	! ***** ******** ******
</code>
自動で改行されていることが確認できます。
<h3>標準入力</h3>
標準入力するにはread文を使用します。<br />read文は以下のように書きます。
<code class="fortran">
	read (*,*) 変数	
</code>
入力されたデータを変数に格納します。
<p>変数については後ほど説明します。<br />一時的にデータを保存する箱だと思ってください。</p>
write文と同様に、最初の「*(アスタリスク)」は出力先がコンソール画面であることを意味します。<br />二つ目の「*(アスタリスク)」は書式化(どのように表示するか)でデフォルト指定しています。
<div class="separator"></div>
では、ユーザが入力した数字を出力する簡単なプログラムを作成しましょう♪
<code class="fortran">
	program hi
		write (*,*) "数字を入力してね♪"
		read (*,*) i
		write (*,*) "**********"
		write (*,*) "あなたは"
		write (*,*) i
		write (*,*) "と入力しましたね♪"
		stop
	end program
</code>
<img src="../pics/標準入出力.gif" alt="標準入出力" />
<?php footer(); ?>